[{"path":"https://sbfnk.github.io/rbi/articles/idd_models.html","id":"deterministic-sir-model-observations-of-prevalence","dir":"Articles","previous_headings":"","what":"Deterministic SIR model, observations of prevalence","title":"Collection of SIR models for LibBi","text":"","code":"model_str <- readLines(\"bi/SIR_deter_prev.bi\") cat(paste(model_str, \"\\n\")) ## model SIR_deterministic {  ##    const N = 1000; // population size  ##    const d_infection = 14; // duration of infection: 2 weeks  ##      ##    state S, I, R;  // susceptible, infectious, recovered  ##    ##    obs Prevalence;  // observations  ##    ##    param R0; // basic reproduction number  ##    ##    sub parameter {  ##      R0 ~ uniform(1, 3)  ##    }  ##    ##    sub initial {  ##      S <- N - 1  ##      I <- 1  ##      R <- 0  ##    }  ##    ##    sub transition { // daily time step  ##      inline i_beta = R0 / d_infection  ##      inline i_gamma = 1 / d_infection  ##      ode {  ##        dS/dt = - i_beta * S * I / N  ##        dI/dt = i_beta * S * I / N - i_gamma * I  ##        dR/dt = i_gamma * I  ##      }  ##    }  ##    ##    sub observation {  ##      Prevalence ~ poisson(I)  ##    }  ##  } sir_model <- bi_model(lines = model_str)"},{"path":"https://sbfnk.github.io/rbi/articles/idd_models.html","id":"deterministic-sir-model-observations-of-incidence","dir":"Articles","previous_headings":"","what":"Deterministic SIR model, observations of incidence","title":"Collection of SIR models for LibBi","text":"","code":"model_str <- readLines(\"bi/SIR_deter.bi\") cat(paste(model_str, \"\\n\")) ## model SIR_deterministic {  ##    const N = 1000; // population size  ##    const d_infection = 14; // duration of infection: 2 weeks  ##      ##    state S, I, R, Z;  // susceptible, infectious, recovered  ##    ##    obs Incidence;  // observations  ##    ##    param rep; //reporting rate  ##    param R0; // basic reproduction number  ##    ##    sub parameter {  ##      rep ~ uniform(0,1)  ##      R0 ~ uniform(1, 3)  ##    }  ##    ##    sub initial {  ##      S <- N - 1  ##      I <- 1  ##      R <- 0  ##    }  ##    ##    sub transition { // daily time step  ##      inline i_lambda = R0 / d_infection * I / N  ##      inline i_gamma = 1 / d_infection  ##    ##      Z <- (t_now % 7 == 0 ? 0 : Z) // reset incidence  ##    ##      ode {  ##        dS/dt = - i_lambda * S  ##        dI/dt = i_lambda * S - i_gamma * I  ##        dR/dt = i_gamma * I  ##        dZ/dt = i_lambda * S  ##      }  ##    }  ##    ##    sub observation {  ##      Incidence ~ poisson(rep * Z)  ##    }  ##  } sir_model <- bi_model(lines = model_str)"},{"path":"https://sbfnk.github.io/rbi/articles/idd_models.html","id":"stochastic-sir-model-sde-observations-of-incidence","dir":"Articles","previous_headings":"","what":"Stochastic SIR model (SDE), observations of incidence","title":"Collection of SIR models for LibBi","text":"","code":"model_str <- readLines(\"bi/SIR_stoch_SDE.bi\") cat(paste(model_str, \"\\n\")) ## model SIR_stoch_SDE {  ##    const h = 7; // incidence time step: 1 week  ##    const N = 1000; // population size  ##    const d_infection = 14; // duration of infection: 2 weeks  ##      ##    noise n_transmission;  // noise term  ##    noise n_recovery;  // noise term  ##    ##    state S, I, R, Z;  // susceptible, infectious, recovered  ##    ##    obs Incidence;  // observations  ##    ##    param rep; //reporting rate  ##    param R0; // basic reproduction number  ##    ##    sub parameter {  ##      rep ~ uniform(0,1)  ##      R0 ~ uniform(1,3)  ##    }  ##    ##    sub initial {  ##      S <- N - 1  ##      I <- 1  ##      R <- 0  ##      Z <- 1  ##    }  ##    ##    sub transition {  ##    ##      inline i_gamma = 1 / d_infection  ##      inline i_lambda = R0 / d_infection * I / N  ##    ##      n_transmission ~ wiener() // noise terms  ##      n_recovery ~ wiener() // noise terms  ##    ##      Z <- (t_now % 7 == 0 ? 0 : Z) // reset incidence  ##    ##      ode (alg='RK4(3)', h=1e-1, atoler=1e-2, rtoler=1e-5) {  ##        dS/dt = - i_lambda * S - sqrt(i_lambda) * n_transmission  ##        dI/dt = i_lambda * S - i_gamma * I + sqrt(i_lambda) * n_transmission - sqrt(i_gamma) * n_recovery  ##        dR/dt = i_gamma * I + sqrt(i_gamma) * n_recovery  ##        dZ/dt = i_lambda * S + sqrt(i_lambda) * n_transmission  ##      }  ##    }  ##    ##    sub observation {  ##      Incidence ~ poisson(rep * Z)  ##    }  ##  } sir_model <- bi_model(lines = model_str)"},{"path":"https://sbfnk.github.io/rbi/articles/idd_models.html","id":"stochastic-sir-model-jump-observations-of-incidence","dir":"Articles","previous_headings":"","what":"Stochastic SIR model (jump), observations of incidence","title":"Collection of SIR models for LibBi","text":"","code":"model_str <- readLines(\"bi/SIR_stoch_jump.bi\") cat(paste(model_str, \"\\n\")) ## model SIR_stoch_jump {  ##    const time_step = 1; // time step  ##    const h = 7; // incidence time step: 1 week  ##    const N = 1000; // population size  ##    const d_infection = 14; // duration of infection: 2 weeks  ##      ##    noise n_transmission;  // random transmission  ##    noise n_recovery;  // random recovery  ##    ##    state S, I, R, Z;  // susceptible, infectious, recovered  ##    ##    obs Incidence;  // observations  ##    ##    param rep; //reporting rate  ##    param R0; // basic reproduction number  ##    ##    sub parameter {  ##      rep ~ uniform(0,1)  ##      R0 ~ uniform(1,3)  ##    }  ##    ##    sub initial {  ##      S <- N - 1  ##      I <- 1  ##      R <- 0  ##      Z <- 1  ##    }  ##    ##    sub transition (delta = time_step) {  ##      inline i_gamma = 1 / d_infection  ##      inline i_lambda = R0 / d_infection * I / N  ##    ##      Z <- (t_now % h == 0 ? 0 : Z) // reset incidence every h time steps  ##    ##      n_transmission ~ binomial(S, 1 - exp(-i_lambda * time_step))  ##      n_recovery ~ binomial(I, 1-exp(-i_gamma * time_step))  ##    ##      S <- S - n_transmission  ##      I <- I + n_transmission - n_recovery  ##      R <- R + n_recovery  ##      Z <- Z + n_transmission  ##    }  ##    ##    sub observation {  ##      Incidence ~ poisson(rep * Z)  ##    }  ##  } sir_model <- bi_model(lines = model_str)"},{"path":"https://sbfnk.github.io/rbi/articles/idd_models.html","id":"example-observation-data-frame","dir":"Articles","previous_headings":"","what":"Example observation data frame","title":"Collection of SIR models for LibBi","text":"","code":"obs <- data.frame(   value = c(1, 6, 2, 26, 99, 57, 78, 57, 15, 9, 4, 1, 1, 1, 0, 2, 0),    time = c(0, 7, 14, 21, 28, 35, 42, 49, 56, 63, 70, 77, 84, 91, 98, 105, 112) )"},{"path":"https://sbfnk.github.io/rbi/articles/rbi.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction to rbi","text":"easiest way install latest stable version rbi via CRAN. Alternatively, current development version can installed using remotes package","code":"install.packages(\"rbi\") remotes::install_github(\"sbfnk/rbi\")"},{"path":"https://sbfnk.github.io/rbi/articles/rbi.html","id":"loading-the-package","dir":"Articles","previous_headings":"","what":"Loading the package","title":"Introduction to rbi","text":"Use load package.","code":"library(\"rbi\")"},{"path":"https://sbfnk.github.io/rbi/articles/rbi.html","id":"getting-started","dir":"Articles","previous_headings":"","what":"Getting started","title":"Introduction to rbi","text":"main computational engine model grammar behind rbi provided LibBi. LibBi manual good place start finding everything know LibBi models inference methods. rbi package mainly provides two classes: bi_model libbi. bi_model class used load, view manipulate LibBi model files. libbi class used run LibBi perform inference. package also provides two methods interacting NetCDF files used LibBi, bi_read bi_write. Lastly, provides get_traces function analyse Markov-chain Monte Carlo (MCMC) traces using coda package.","code":""},{"path":"https://sbfnk.github.io/rbi/articles/rbi.html","id":"the-bi_model-class","dir":"Articles","previous_headings":"","what":"The bi_model class","title":"Introduction to rbi","text":"example, consider simplified version SIR model discussed Del Moral et al. (2014). included rbi package can loaded ways implementing (deterministic stochastic) SIR model can found collection SIR models LibBi, also find load bi_model object, e.g. sir_model. Feel free run commands different versions model. sir_model object now contains model, can displayed part model can shown , example, , example, get list certain variables, can use var_names function. example, get list states, can use also various methods manipulating model, remove_lines, insert_line, replace_all. fix method fixes variable one value. can useful, example, run deterministic equivalent stochastic model testing purposes: get documentation methods, use links documentation bi_model.","code":"model_file <- system.file(package = \"rbi\", \"SIR.bi\") sir_model <- bi_model(model_file) # load model sir_model #> bi_model: #> ========= #>  1: model SIR { #>  2:   const h = 7 #>  3:   const N = 1000 #>  4:   const d_infection = 14 #>  5:   noise n_transmission #>  6:   noise n_recovery #>  7:   state S #>  8:   state I #>  9:   state R #> 10:   state Z #> 11:   obs Incidence #> 12:   param p_rep #> 13:   param p_R0 #> 14:   sub parameter { #> 15:     p_rep ~ uniform(0,1) #> 16:     p_R0 ~ uniform(1,3) #> 17:   } #> 18:   sub initial { #> 19:     S <- N - 1 #> 20:     I <- 1 #> 21:     R <- 0 #> 22:     Z <- 1 #> 23:   } #> 24:   sub transition { #> 25:     n_transmission ~ wiener() #> 26:     n_recovery ~ wiener() #> 27:     Z <- (t_now % 7 == 0 ? 0 : Z) #> 28:     inline i_beta = p_R0 / d_infection * exp(n_transmission) #> 29:     inline i_gamma = 1 / d_infection * exp(n_recovery) #> 30:     ode (alg='RK4(3)', h=1e-1, atoler=1e-2, rtoler=1e-5) { #> 31:       dS/dt = - i_beta * S * I / N #> 32:       dI/dt = i_beta * S * I / N - i_gamma * I #> 33:       dR/dt = i_gamma * I #> 34:       dZ/dt = i_beta * S * I / N #> 35:     } #> 36:   } #> 37:   sub observation { #> 38:     Incidence ~ poisson(p_rep * Z) #> 39:   } #> 40:   sub proposal_initial { #> 41:     S <- N - 1 #> 42:     I <- 1 #> 43:     R <- 0 #> 44:     Z <- 1 #> 45:   } #> 46:   sub proposal_parameter { #> 47:     p_rep ~ truncated_gaussian(mean = p_rep, std = 0.03, lower = 0, upper = 1) #> 48:     p_R0 ~ truncated_gaussian(mean = p_R0, std = 0.2, lower = 1, upper = 3) #> 49:   } #> 50: } sir_model[35:38] #> [1] \"}\"                              \"}\"                              #> [3] \"sub observation {\"              \"Incidence ~ poisson(p_rep * Z)\" get_block(sir_model, \"parameter\") #> [1] \"p_rep ~ uniform(0,1)\" \"p_R0 ~ uniform(1,3)\" var_names(sir_model, type = \"state\") #> [1] \"S\" \"I\" \"R\" \"Z\" det_sir_model <- fix(sir_model, n_transmission = 0, n_recovery = 0)"},{"path":"https://sbfnk.github.io/rbi/articles/rbi.html","id":"generating-a-dataset","dir":"Articles","previous_headings":"","what":"Generating a dataset","title":"Introduction to rbi","text":"First, let’s create data set SIR model. simulates model single time time 0 time 16*7 (say, 16 weeks daily time step), producing 16 outputs (one week). Note specified random seed make document reproducible. omit set.seed command set different number, results different even run set commands. Also note LibBi compiles model code first time run. run command second time, run much faster. generate_dataset function returns libbi object: generated dataset can viewed /stored variable using bi_read: bi_read function takes name NetCDF file libbi object (case locates output file) stores contents list data frames vectors, depending dimensionality contents. Note , working_folder specified, model output files stored temporary folder. can visualise generated incidence data ","code":"set.seed(1001912) sir_data <- generate_dataset(sir_model, end_time = 16 * 7, noutputs = 16) sir_data #> Wrapper around LibBi #> ====================== #> Model:  SIR  #> Run time:  0.002947  seconds #> Number of samples:  1  #> State trajectories recorded:  S I R Z  #> Noise trajectories recorded:  n_transmission n_recovery  #> Observation trajectories recorded:  Incidence  #> Parameters recorded:  p_rep p_R0 dataset <- bi_read(sir_data) names(dataset) #>  [1] \"n_transmission\" \"n_recovery\"     \"S\"              \"I\"              #>  [5] \"R\"              \"Z\"              \"Incidence\"      \"p_rep\"          #>  [9] \"p_R0\"           \"clock\" dataset$p_R0 #>      value #> 1 2.864399 dataset$Incidence #>    time value #> 1     0     0 #> 2     7     0 #> 3    14     0 #> 4    21     5 #> 5    28    13 #> 6    35     9 #> 7    42     7 #> 8    49     4 #> 9    56     1 #> 10   63     0 #> 11   70     0 #> 12   77     0 #> 13   84     0 #> 14   91     0 #> 15   98     0 #> 16  105     0 #> 17  112     0 plot(dataset$Incidence$time, dataset$Incidence$value) lines(dataset$Incidence$time, dataset$Incidence$value)"},{"path":"https://sbfnk.github.io/rbi/articles/rbi.html","id":"the-libbi-class","dir":"Articles","previous_headings":"","what":"The libbi class","title":"Introduction to rbi","text":"libbi class manages interaction LibBi sampling prior posterior distribution. example, sir_data object type libbi: Th bi_generate_dataset one particular way generating libbi object, used generate test data model. standard way creating libbi object Bayesian inference using libbi command initialises libbi object model created earlier assigns variable bi. Let’s sample prior SIR model: step calls LibBi sample prior distribution previously specified model, generating 1,000 samples time running model 16 * 7 = 112 time steps writing 16 outputs (.e., every 7 time steps). LibBi parses model, creates C++ code, compiles run model. model run , much quicker use already compiled C++ code run model: sample command returns updated libbi object , case, just assign bi object. call sample preserves options passed previous call sample libbi, unless overwritten arguments passed sample (e.g., passing new nsamples argument). Let’s closer look bi object: see even detail, try can see object contains 14 fields, including model, path libbi script, command used run libbi (bi$command); options field contains options LibBi called . includes ones passed sample fields contain various bits information object, including model used, command used run LibBi (bi$command) output file name: can get results sampling run using bi_read shorthand looks output_file_name field read data. Let’s look returned object list 9 objects, 8 representing (noise/state) variables parameters file, one number clock, representing time spent running model microseconds. can see time-varying variables represented data frames three columns: np (enumerating individual simulations), time value. Parameters don’t vary time just np value columns.","code":"class(sir_data) #> [1] \"libbi\" bi <- libbi(sir_model) class(bi) #> [1] \"libbi\" bi_prior <- sample(   bi, target = \"prior\", nsamples = 1000, end_time = 16 * 7, noutputs = 16 ) bi_prior <- sample(bi_prior) bi_prior #> Wrapper around LibBi #> ====================== #> Model:  SIR  #> Run time:  0.110076  seconds #> Number of samples:  1000  #> State trajectories recorded:  S I R Z  #> Noise trajectories recorded:  n_transmission n_recovery  #> Parameters recorded:  p_rep p_R0 str(bi_prior) #> List of 21 #>  $ options         :List of 5 #>   ..$ build-dir: chr \"/tmp/RtmpnpdinQ/SIR3b0917918c51\" #>   ..$ seed     : num 3.33e+08 #>   ..$ nsamples : num 1000 #>   ..$ end-time : num 112 #>   ..$ noutputs : num 16 #>  $ path_to_libbi   : chr \"/usr/local/bin/libbi\" #>  $ model           : 'bi_model' chr [1:50] \"model SIR {\" \"const h = 7\" \"const N = 1000\" \"const d_infection = 14\" ... #>  $ model_file_name : chr \"/tmp/RtmpnpdinQ/SIR3b0917918c51/SIR.bi\" #>  $ dims            : list() #>  $ time_dim        : chr(0)  #>  $ coord_dims      : list() #>  $ thin            : num 1 #>  $ output_every    : num NA #>  $ debug           : logi FALSE #>  $ command         : chr \"/usr/local/bin/libbi sample --build-dir /tmp/RtmpnpdinQ/SIR3b0917918c51 --seed 332755949 --target prior --nsamp\"| __truncated__ #>  $ output_file_name: chr \"/tmp/RtmpnpdinQ/SIR3b0917918c51/SIR_output3b091a0266da.nc\" #>  $ log_file_name   : chr \"/tmp/RtmpnpdinQ/SIR3b0917918c51/output3b0925b48df1.txt\" #>  $ user_log_file   : logi FALSE #>  $ timestamp       :List of 1 #>   ..$ output: POSIXct[1:1], format: \"2023-08-15 14:54:52\" #>  $ run_flag        : logi TRUE #>  $ error_flag      : logi FALSE #>  $ use_cache       : logi TRUE #>  $ supplement      : NULL #>  $ .gc_env         :<environment: 0x5591251dfb90>  #>  $ .cache          :<environment: 0x559121706310>  #>  - attr(*, \"class\")= chr \"libbi\" bi_prior$options #> $`build-dir` #> [1] \"/tmp/RtmpnpdinQ/SIR3b0917918c51\" #>  #> $seed #> [1] 332755949 #>  #> $nsamples #> [1] 1000 #>  #> $`end-time` #> [1] 112 #>  #> $noutputs #> [1] 16 bi_prior$output_file_name #> [1] \"/tmp/RtmpnpdinQ/SIR3b0917918c51/SIR_output3b091a0266da.nc\" prior <- bi_read(bi_prior$output_file_name) prior <- bi_read(bi_prior) str(prior) #> List of 9 #>  $ n_transmission:'data.frame':  17000 obs. of  3 variables: #>   ..$ np   : num [1:17000] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ time : num [1:17000] 0 7 14 21 28 35 42 49 56 63 ... #>   ..$ value: num [1:17000] 0 -1.1943 0.9678 1.0697 0.0815 ... #>  $ n_recovery    :'data.frame':  17000 obs. of  3 variables: #>   ..$ np   : num [1:17000] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ time : num [1:17000] 0 7 14 21 28 35 42 49 56 63 ... #>   ..$ value: num [1:17000] 0 0.165 1.581 0.45 0.61 ... #>  $ S             :'data.frame':  17000 obs. of  3 variables: #>   ..$ np   : num [1:17000] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ time : num [1:17000] 0 7 14 21 28 35 42 49 56 63 ... #>   ..$ value: num [1:17000] 999 998 994 991 941 ... #>  $ I             :'data.frame':  17000 obs. of  3 variables: #>   ..$ np   : num [1:17000] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ time : num [1:17000] 0 7 14 21 28 35 42 49 56 63 ... #>   ..$ value: num [1:17000] 1 1.47 2.89 3.81 40.56 ... #>  $ R             :'data.frame':  17000 obs. of  3 variables: #>   ..$ np   : num [1:17000] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ time : num [1:17000] 0 7 14 21 28 35 42 49 56 63 ... #>   ..$ value: num [1:17000] 0 0.808 3.292 5.304 18.587 ... #>  $ Z             :'data.frame':  17000 obs. of  3 variables: #>   ..$ np   : num [1:17000] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ time : num [1:17000] 0 7 14 21 28 35 42 49 56 63 ... #>   ..$ value: num [1:17000] 1 1.28 3.9 2.93 50.03 ... #>  $ p_rep         :'data.frame':  1000 obs. of  2 variables: #>   ..$ np   : num [1:1000] 0 1 2 3 4 5 6 7 8 9 ... #>   ..$ value: num [1:1000] 0.917 0.161 0.637 0.561 0.433 ... #>  $ p_R0          :'data.frame':  1000 obs. of  2 variables: #>   ..$ np   : num [1:1000] 0 1 2 3 4 5 6 7 8 9 ... #>   ..$ value: num [1:1000] 1.7 1.6 2.63 1.08 2.83 ... #>  $ clock         : num 110076"},{"path":"https://sbfnk.github.io/rbi/articles/rbi.html","id":"fitting-a-model-to-data-using-pmcmc","dir":"Articles","previous_headings":"","what":"Fitting a model to data using PMCMC","title":"Introduction to rbi","text":"Let’s perform inference using Particle Markov-chain Metropolis Hastings (PMMH). following command generate 16 * 10,000 = 160,000 simulations therefore may take little run (want see samples progress, use verbose=TRUE sample call). samples posterior distribution. Remember options preserved previous runs (passed bi) first argument, don’t need specify nsamples, end_time noutputs , unless want change . nparticles option specifies number particles. can also pass list data frames (element list corresponding one observed variable obs argument, example Input, init observation files (see LibBi manual details) can specified using init, input, obs options, respectively. can specified either name NetCDF file containing data, libbi object (case output file taken) directly via appropriate R object containing data (e.g., character vector length one, list data frames numeric vectors). case command , init specified list, obs libbi object. Incidence variable sir_data object taken observations. time dimension (column, data frame) passed init, input /obs files can specified using time_dim option. given, assumed time, dimension exists , , numeric column called value (contents value_column option). produce unique column name, error thrown. dimensions/columns passed options interpreted additional dimensions data, stored dims field libbi object. options (apart log_file_name, see Debugging section) passed command libbi – complete list, see LibBi manual. Hyphens can replaced underscores confuse R (see end_time). arguments starting enable/disable can specified boolean (e.g., assert=TRUE). dry- options can specified \"dry\" argument, e.g., parse=\"dry\".","code":"bi <- sample(bi_prior, target = \"posterior\", nparticles = 32, obs = sir_data) df <- data.frame(   time = c(0, 7, 14, 21, 28, 35, 42, 49, 56, 63, 70, 77, 84, 91, 98, 105, 112),   value = c(1, 6, 2, 26, 99, 57, 78, 57, 15, 9, 4, 1, 1, 1, 0, 2, 0) ) bi_df <- sample(   bi_prior, target = \"posterior\", nparticles = 32, obs = list(Incidence = df) )"},{"path":"https://sbfnk.github.io/rbi/articles/rbi.html","id":"analysing-an-mcmc-run","dir":"Articles","previous_headings":"","what":"Analysing an MCMC run","title":"Introduction to rbi","text":"Let’s get results preceding sample command: can see two objects previously specified target=\"prior\": loglikelihood (estimated log-likelihood parameters MCMC step) logprior (estimated log-prior density parameters MCMC step). get summary parameters sampled, use summary sampled trajectories can obtained using particular posterior sample can viewed extract_sample (indices running 0 nsamples - 1): analyse MCMC outputs, can use coda package get_traces function rbi. Note , get exactly traces, set seed . can, example, visualise parameter traces densities  Compare marginal posterior distributions “correct” parameters used generate data set: details using coda analyse chains, see website coda package. plotting functionality, ggmcmc package also worth considering.","code":"bi_contents(bi) #>  [1] \"time\"           \"n_transmission\" \"n_recovery\"     \"S\"              #>  [5] \"I\"              \"R\"              \"Z\"              \"p_rep\"          #>  [9] \"p_R0\"           \"clock\"          \"loglikelihood\"  \"logprior\" posterior <- bi_read(bi) str(posterior) #> List of 11 #>  $ n_transmission:'data.frame':  17000 obs. of  3 variables: #>   ..$ np   : num [1:17000] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ time : num [1:17000] 0 7 14 21 28 35 42 49 56 63 ... #>   ..$ value: num [1:17000] 0 -0.62 -0.42 2.29 -1.12 ... #>  $ n_recovery    :'data.frame':  17000 obs. of  3 variables: #>   ..$ np   : num [1:17000] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ time : num [1:17000] 0 7 14 21 28 35 42 49 56 63 ... #>   ..$ value: num [1:17000] 0 -0.0711 -0.3837 0.0199 0.3343 ... #>  $ S             :'data.frame':  17000 obs. of  3 variables: #>   ..$ np   : num [1:17000] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ time : num [1:17000] 0 7 14 21 28 35 42 49 56 63 ... #>   ..$ value: num [1:17000] 999 998 997 977 953 ... #>  $ I             :'data.frame':  17000 obs. of  3 variables: #>   ..$ np   : num [1:17000] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ time : num [1:17000] 0 7 14 21 28 35 42 49 56 63 ... #>   ..$ value: num [1:17000] 1 0.474 0.81 18.221 24.718 ... #>  $ R             :'data.frame':  17000 obs. of  3 variables: #>   ..$ np   : num [1:17000] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ time : num [1:17000] 0 7 14 21 28 35 42 49 56 63 ... #>   ..$ value: num [1:17000] 0 1.36 1.77 4.48 22.01 ... #>  $ Z             :'data.frame':  17000 obs. of  3 variables: #>   ..$ np   : num [1:17000] 0 0 0 0 0 0 0 0 0 0 ... #>   ..$ time : num [1:17000] 0 7 14 21 28 35 42 49 56 63 ... #>   ..$ value: num [1:17000] 1 0.829 0.751 20.123 24.03 ... #>  $ p_rep         :'data.frame':  1000 obs. of  2 variables: #>   ..$ np   : num [1:1000] 0 1 2 3 4 5 6 7 8 9 ... #>   ..$ value: num [1:1000] 0.291 0.297 0.308 0.308 0.308 ... #>  $ p_R0          :'data.frame':  1000 obs. of  2 variables: #>   ..$ np   : num [1:1000] 0 1 2 3 4 5 6 7 8 9 ... #>   ..$ value: num [1:1000] 2.38 2.42 2.32 2.32 2.32 ... #>  $ clock         : num 7979445 #>  $ loglikelihood :'data.frame':  1000 obs. of  2 variables: #>   ..$ np   : num [1:1000] 0 1 2 3 4 5 6 7 8 9 ... #>   ..$ value: num [1:1000] -39.7 -36 -33.3 -33.3 -33.3 ... #>  $ logprior      :'data.frame':  1000 obs. of  2 variables: #>   ..$ np   : num [1:1000] 0 1 2 3 4 5 6 7 8 9 ... #>   ..$ value: num [1:1000] -0.693 -0.693 -0.693 -0.693 -0.693 ... summary(bi) #>     var      Min.   1st Qu.    Median     Mean   3rd Qu.      Max. #> 1 p_rep 0.2670997 0.3302499 0.3863458 0.409965 0.4836831 0.5715807 #> 2  p_R0 1.0000703 1.1101192 1.2560842 1.567833 2.4694609 2.5115775 summary(bi, type = \"state\") extract_sample(bi, 314) library(\"coda\") traces <- mcmc(get_traces(bi)) plot(traces) bi_read(sir_data, type = \"param\") #> $p_rep #>        value #> 1 0.04015605 #>  #> $p_R0 #>      value #> 1 2.864399"},{"path":"https://sbfnk.github.io/rbi/articles/rbi.html","id":"predictions","dir":"Articles","previous_headings":"","what":"Predictions","title":"Introduction to rbi","text":"can use predict function re-simulate fitted model using estimated parameters, generate samples \\(p(x_t|\\theta)\\) \\(\\theta\\) distributed according marginal posterior distribution \\(p(\\theta|y^*_t)\\) (: \\(\\theta\\) fixed parameters, \\(x_t\\) state trajectories \\(y^*_t\\) observed data points, LibBi manual). can useful, example, comparing typical model trajectories data, running model beyond last data point. =c(\"transform-obs--state\") tells LibBi treat observations state variable, randomly generate observations, .e. samples \\(p(y_t|\\theta)\\) , , \\(\\theta\\) distributed according posterior distribution \\(p(\\theta|y^*_t)\\) (see -transform-obs--state option LibBi manual).","code":"pred_bi <- predict(   bi, start_time = 0, end_time = 20 * 7, output_every = 7,   with = c(\"transform-obs-to-state\") )"},{"path":"https://sbfnk.github.io/rbi/articles/rbi.html","id":"sample-observations","dir":"Articles","previous_headings":"","what":"Sample observations","title":"Introduction to rbi","text":"sample observations sampled posterior state trajectories, samples \\(p(y_t|x_t)\\) \\(x_t\\) distributed according posterior distribution \\(p(x_t | y_t)\\), can use. Compare data:","code":"obs_bi <- sample_obs(bi) summary(obs_bi, type = \"obs\") #>          var time Min. 1st Qu. Median   Mean 3rd Qu. Max. #> 1  Incidence    0    0       0      0  0.463       1    4 #> 2  Incidence    7    0       0      0  0.577       1    5 #> 3  Incidence   14    0       0      1  1.104       2    6 #> 4  Incidence   21    0       3      4  4.961       7   20 #> 5  Incidence   28    0       8     10 10.984      14   30 #> 6  Incidence   35    0       5      7  8.019      10   21 #> 7  Incidence   42    0       4      6  6.398       8   18 #> 8  Incidence   49    0       3      4  4.430       6   14 #> 9  Incidence   56    0       0      1  1.190       2    7 #> 10 Incidence   63    0       0      0  0.260       0    5 #> 11 Incidence   70    0       0      0  0.167       0    4 #> 12 Incidence   77    0       0      0  0.140       0    3 #> 13 Incidence   84    0       0      0  0.161       0    5 #> 14 Incidence   91    0       0      0  0.111       0    3 #> 15 Incidence   98    0       0      0  0.133       0    3 #> 16 Incidence  105    0       0      0  0.170       0    4 #> 17 Incidence  112    0       0      0  0.239       0    6 dataset$Incidence #>    time value #> 1     0     0 #> 2     7     0 #> 3    14     0 #> 4    21     5 #> 5    28    13 #> 6    35     9 #> 7    42     7 #> 8    49     4 #> 9    56     1 #> 10   63     0 #> 11   70     0 #> 12   77     0 #> 13   84     0 #> 14   91     0 #> 15   98     0 #> 16  105     0 #> 17  112     0"},{"path":"https://sbfnk.github.io/rbi/articles/rbi.html","id":"filtering","dir":"Articles","previous_headings":"","what":"Filtering","title":"Introduction to rbi","text":"-called clients LibBi (besides sample) supported commands name: `filter, optimise rewrite. example, run particle filter last posterior sample generated , can use:","code":"bi_filtered <- filter(bi)"},{"path":"https://sbfnk.github.io/rbi/articles/rbi.html","id":"plotting","dir":"Articles","previous_headings":"","what":"Plotting","title":"Introduction to rbi","text":"Output form LibBi runs can visualised using standard R plotting routines plotting packages ggplot2. summary function can help . example, plot observations randomly generated posterior distribution parameters compare data can use  plotted median fit black line, interquartile range grey ribbon, data points dark red dots. Compare observations randomly generated posterior distribution trajectories:","code":"ps <- summary(pred_bi, type = \"obs\")  library(\"ggplot2\") ggplot(ps, aes(x = time)) +   geom_line(aes(y = Median)) +   geom_ribbon(aes(ymin = `1st Qu.`, ymax = `3rd Qu.`), alpha = 0.5) +   geom_point(aes(y = value), dataset$Incidence, color = \"darkred\") +   ylab(\"cases\") os <- summary(obs_bi, type = \"obs\")  ggplot(os, aes(x = time)) +   geom_line(aes(y = Median)) +   geom_ribbon(aes(ymin = `1st Qu.`, ymax = `3rd Qu.`), alpha = 0.5) +   geom_point(aes(y = value), dataset$Incidence, color = \"darkred\") +   ylab(\"cases\")"},{"path":"https://sbfnk.github.io/rbi/articles/rbi.html","id":"saving-and-loading-libbi-objects","dir":"Articles","previous_headings":"","what":"Saving and loading libbi objects","title":"Introduction to rbi","text":"rbi provides versions saveRDS readRDS functions called save_libbi read_libbi. make sure information (including options, input, init observation files) stored object.","code":"save_libbi(bi, \"bi.rds\") bi <- read_libbi(\"bi.rds\") bi #> Wrapper around LibBi #> ====================== #> Model:  SIR  #> Run time:  7.979445  seconds #> Number of samples:  1000  #> State trajectories recorded:  S I R Z  #> Noise trajectories recorded:  n_transmission n_recovery  #> Parameters recorded:  p_rep p_R0"},{"path":"https://sbfnk.github.io/rbi/articles/rbi.html","id":"creating-libbi-objects-from-previous-runs","dir":"Articles","previous_headings":"","what":"Creating libbi objects from previous runs","title":"Introduction to rbi","text":"recreate libbi object previous R session, use attach_data. example, one use following code get acceptance rate LibBi run given output model file:","code":"pz_run_output <- bi_read(system.file(package = \"rbi\", \"example_output.nc\")) pz_model_file <- system.file(package = \"rbi\", \"PZ.bi\") pz_posterior <- attach_data(libbi(pz_model_file), \"output\", pz_run_output) traces <- mcmc(get_traces(pz_posterior)) a <- 1 - rejectionRate(traces) a #>        mu     sigma  #> 0.4724409 0.4724409"},{"path":"https://sbfnk.github.io/rbi/articles/rbi.html","id":"debugging","dir":"Articles","previous_headings":"","what":"Debugging","title":"Introduction to rbi","text":"general check model syntax, rewrite command useful: generates internal representation model LibBi. doesn’t matter much looks like, throw error problem. libbi throws error, best investigate debug = TRUE, setting working_folder folder one can use debugging. Output libbi call can saved file using log_file_name option (default temporary file).","code":"rewrite(sir_model)"},{"path":"https://sbfnk.github.io/rbi/articles/rbi.html","id":"related-packages","dir":"Articles","previous_headings":"","what":"Related packages","title":"Introduction to rbi","text":"rbi.helpers contains higher-level methods interact LibBi, including methods plotting results libbi runs adapting proposal distribution number particles. information, see rbi.helpers vignette.","code":""},{"path":"https://sbfnk.github.io/rbi/articles/rbi.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Introduction to rbi","text":"Murray, L.M. (2013). Bayesian state-space modelling high-performance hardware using LibBi.","code":""},{"path":"https://sbfnk.github.io/rbi/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pierre E. Jacob. Author. Anthony Lee. Contributor. Lawrence M. Murray. Contributor. Sebastian Funk. Author, maintainer. Sam Abbott. Contributor.","code":""},{"path":"https://sbfnk.github.io/rbi/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Jacob P, Funk S (2023). rbi: Interface 'LibBi'. R package version 1.0.0.9000, https://github.com/sbfnk/rbi.","code":"@Manual{,   title = {rbi: Interface to 'LibBi'},   author = {Pierre E. Jacob and Sebastian Funk},   year = {2023},   note = {R package version 1.0.0.9000},   url = {https://github.com/sbfnk/rbi}, }"},{"path":"https://sbfnk.github.io/rbi/index.html","id":"bayesian-inference-for-state-space-models-with-r","dir":"","previous_headings":"","what":"Interface to LibBi","title":"Interface to LibBi","text":"rbi R interface libbi, library Bayesian inference. mainly contains: various functions retrieve process results libbi (NetCDF format) bi_model class, manipulate libbi models libbi wrapper class, perform Bayesian using libbi inference within R,","code":""},{"path":"https://sbfnk.github.io/rbi/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Interface to LibBi","text":"easiest way install latest stable version rbi via CRAN: Alternatively, current development version can installed using remotes package rbi package tested GNU/Linux OS X, mostly work everywhere R works. want use rbi wrapper LibBi need working version LibBi. install LibBi Mac, easiest way install Homebrew, followed (using command shell, .e. Terminal similar): linux, follow instructions provided LibBi. path libbi script can passed argument rbi, otherwise package tries find automatically using linux/unix command. just want process output LibBi, need LibBi installed.","code":"install.packages(\"rbi\") # install.packages(\"remotes\") library(\"remotes\") install_github(\"sbfnk/rbi\") brew install libbi"},{"path":"https://sbfnk.github.io/rbi/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Interface to LibBi","text":"good starting point look included demos: information, look introductory vignette link rbi CRAN package.","code":"demo(PZ_generate_dataset) ## generating a data set from a model demo(PZ_PMMH) ## particle Markov-chain Metropolis-Hastings demo(PZ_SMC2) ## SMC^2 demo(PZ_filtering) ## filtering"},{"path":"https://sbfnk.github.io/rbi/index.html","id":"using-coda","dir":"","previous_headings":"","what":"Using coda","title":"Interface to LibBi","text":"LibBi contains get_traces method provides interface coda.","code":""},{"path":"https://sbfnk.github.io/rbi/index.html","id":"other-packages","dir":"","previous_headings":"","what":"Other packages","title":"Interface to LibBi","text":"higher-level methods interact LibBi, look rbi.helpers.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/Equals.bi_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if two models are equal — Equals.bi_model","title":"Check if two models are equal — Equals.bi_model","text":"Ignores differences model name.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/Equals.bi_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if two models are equal — Equals.bi_model","text":"","code":"# S3 method for bi_model ==(e1, e2, ...)"},{"path":"https://sbfnk.github.io/rbi/reference/Equals.bi_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if two models are equal — Equals.bi_model","text":"e1 bi_model e2 bi_model ... ignored","code":""},{"path":"https://sbfnk.github.io/rbi/reference/Equals.bi_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if two models are equal — Equals.bi_model","text":"TRUE FALSE, depending whether models equal ","code":""},{"path":"https://sbfnk.github.io/rbi/reference/Equals.bi_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if two models are equal — Equals.bi_model","text":"","code":"model_file_name <- system.file(package = \"rbi\", \"PZ.bi\") PZ <- bi_model(filename = model_file_name) PZ == PZ # TRUE #> [1] TRUE"},{"path":"https://sbfnk.github.io/rbi/reference/Extract.bi_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset model lines — Extract.bi_model","title":"Subset model lines — Extract.bi_model","text":"Extracts subset lines model.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/Extract.bi_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset model lines — Extract.bi_model","text":"","code":"# S3 method for bi_model [(x, i, ...)"},{"path":"https://sbfnk.github.io/rbi/reference/Extract.bi_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset model lines — Extract.bi_model","text":"x bi_model vector line numbers ... ignored","code":""},{"path":"https://sbfnk.github.io/rbi/reference/Extract.bi_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset model lines — Extract.bi_model","text":"character string extracted model lines(s)","code":""},{"path":"https://sbfnk.github.io/rbi/reference/Extract.bi_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset model lines — Extract.bi_model","text":"","code":"model_file_name <- system.file(package = \"rbi\", \"PZ.bi\") PZ <- bi_model(filename = model_file_name) PZ[3:4] #> [1] \"const e = 0.3\"   \"const m_l = 0.1\""},{"path":"https://sbfnk.github.io/rbi/reference/Extract_assign.bi_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset and replace model lines — Extract_assign.bi_model","title":"Subset and replace model lines — Extract_assign.bi_model","text":"Extracts subset lines model assigns new character strings.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/Extract_assign.bi_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset and replace model lines — Extract_assign.bi_model","text":"","code":"# S3 method for bi_model [(x, i, ...) <- value"},{"path":"https://sbfnk.github.io/rbi/reference/Extract_assign.bi_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset and replace model lines — Extract_assign.bi_model","text":"x bi_model vector line numbers ... ignored value vector length , containing replacement strings","code":""},{"path":"https://sbfnk.github.io/rbi/reference/Extract_assign.bi_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset and replace model lines — Extract_assign.bi_model","text":"updated bi_model object","code":""},{"path":"https://sbfnk.github.io/rbi/reference/Extract_assign.bi_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset and replace model lines — Extract_assign.bi_model","text":"","code":"model_file_name <- system.file(package = \"rbi\", \"PZ.bi\") PZ <- bi_model(filename = model_file_name) PZ[3:4] <- c(\"const e = 0.4\", \"const m_l = 0.05\")"},{"path":"https://sbfnk.github.io/rbi/reference/Unequals.bi_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if two models are unequal — Unequals.bi_model","title":"Check if two models are unequal — Unequals.bi_model","text":"Ignores differences model name.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/Unequals.bi_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if two models are unequal — Unequals.bi_model","text":"","code":"# S3 method for bi_model !=(e1, e2, ...)"},{"path":"https://sbfnk.github.io/rbi/reference/Unequals.bi_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if two models are unequal — Unequals.bi_model","text":"e1 bi_model e2 bi_model ... ignored","code":""},{"path":"https://sbfnk.github.io/rbi/reference/Unequals.bi_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if two models are unequal — Unequals.bi_model","text":"TRUE FALSE, depending whether models equal ","code":""},{"path":"https://sbfnk.github.io/rbi/reference/Unequals.bi_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if two models are unequal — Unequals.bi_model","text":"","code":"model_file_name <- system.file(package = \"rbi\", \"PZ.bi\") PZ <- bi_model(filename = model_file_name) PZ != PZ # FALSE #> [1] FALSE"},{"path":"https://sbfnk.github.io/rbi/reference/absolute_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Absolute Path — absolute_path","title":"Absolute Path — absolute_path","text":"function used convert relative file paths absolute file paths without checking file exists tools::file_as_absolute_path ","code":""},{"path":"https://sbfnk.github.io/rbi/reference/absolute_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Absolute Path — absolute_path","text":"","code":"absolute_path(filename, dirname)"},{"path":"https://sbfnk.github.io/rbi/reference/absolute_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Absolute Path — absolute_path","text":"filename name file, absolute relative folder dirname name folder file supposed ","code":""},{"path":"https://sbfnk.github.io/rbi/reference/absolute_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Absolute Path — absolute_path","text":"character string containing absolute path","code":""},{"path":"https://sbfnk.github.io/rbi/reference/add_block.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a block to a LibBi model — add_block","title":"Add a block to a LibBi model — add_block","text":"Add block LibBi model. block exists, removed first.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/add_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a block to a LibBi model — add_block","text":"","code":"# S3 method for bi_model add_block(x, name, lines, options, ...)"},{"path":"https://sbfnk.github.io/rbi/reference/add_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a block to a LibBi model — add_block","text":"x bi_model object name name block lines character vector, lines block options options block ... ignored","code":""},{"path":"https://sbfnk.github.io/rbi/reference/add_block.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a block to a LibBi model — add_block","text":"bi_model object containing new block","code":""},{"path":"https://sbfnk.github.io/rbi/reference/assert_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that a LibBi wrapper has valid output — assert_files","title":"Check that a LibBi wrapper has valid output — assert_files","text":"checks libbi object given run (via   sample, filter optimize))   output file modified since.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/assert_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that a LibBi wrapper has valid output — assert_files","text":"","code":"# S3 method for libbi assert_files(x, ...)"},{"path":"https://sbfnk.github.io/rbi/reference/assert_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that a LibBi wrapper has valid output — assert_files","text":"x libbi object ... ignored","code":""},{"path":"https://sbfnk.github.io/rbi/reference/assert_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check that a LibBi wrapper has valid output — assert_files","text":"nothing (invisible NULL); error thrown   problem","code":""},{"path":"https://sbfnk.github.io/rbi/reference/attach_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Attach a new file or data set to a libbi object — attach_data","title":"Attach a new file or data set to a libbi object — attach_data","text":"Adds (output, obs, etc.) file libbi object.   useful recreate libbi object model output   files previous run bi_write options append overwrite   determine exactly file contain end .   FALSE (default), existing file ignored.   append TRUE, existing data file preserved,   data set passed data already file   added. overwrite TRUE, existing data file   preserved except variables exist passed data.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/attach_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attach a new file or data set to a libbi object — attach_data","text":"","code":"# S3 method for libbi attach_data(   x,   file,   data,   in_place = FALSE,   append = FALSE,   overwrite = FALSE,   quiet = FALSE,   time_dim = character(0),   coord_dims = list(),   ... )"},{"path":"https://sbfnk.github.io/rbi/reference/attach_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attach a new file or data set to a libbi object — attach_data","text":"x libbi object file type file attach, one \"output\", \"obs\", \"input\" \"init\" data name file attach, list data frames contain outputs; assumed already thinned in_place TRUE, replace file place already exists libbi object; can speed operation append=TRUE otherwise file read used ; used care, though, can render existing libbi objects invalid files pointing changed. append TRUE, append variables file exists; default: FALSE overwrite TRUE, overwrite variables file exists; default: FALSE quiet TRUE, suppress warning message normally given replace=TRUE file exists already time_dim name time dimension, one exists; default: \"time\" coord_dims names coordinate dimension, ; named list character vectors, matched variables names ... options bi_write (e.g., 'time_dim')","code":""},{"path":"https://sbfnk.github.io/rbi/reference/attach_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Attach a new file or data set to a libbi object — attach_data","text":"updated libbi object","code":""},{"path":"https://sbfnk.github.io/rbi/reference/attach_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Attach a new file or data set to a libbi object — attach_data","text":"","code":"bi <- libbi(model = system.file(package = \"rbi\", \"PZ.bi\")) example_output <- bi_read(system.file(package = \"rbi\", \"example_output.nc\")) bi <- attach_data(bi, \"output\", example_output)"},{"path":"https://sbfnk.github.io/rbi/reference/bi_contents.html","id":null,"dir":"Reference","previous_headings":"","what":"Bi contents — bi_contents","title":"Bi contents — bi_contents","text":"function gets name variables passed file, list   libbi object","code":""},{"path":"https://sbfnk.github.io/rbi/reference/bi_contents.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bi contents — bi_contents","text":"","code":"bi_contents(read, ...)"},{"path":"https://sbfnk.github.io/rbi/reference/bi_contents.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bi contents — bi_contents","text":"read either path NetCDF file, NetCDF connection created using nc_open, libbi object read output ... parameters bi_open (especially \"file\")","code":""},{"path":"https://sbfnk.github.io/rbi/reference/bi_contents.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bi contents — bi_contents","text":"character vector variable names","code":""},{"path":"https://sbfnk.github.io/rbi/reference/bi_contents.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bi contents — bi_contents","text":"","code":"example_output_file <- system.file(package = \"rbi\", \"example_output.nc\") bi_contents(example_output_file) #> [1] \"time\"          \"alpha\"         \"P\"             \"Z\"             #> [5] \"mu\"            \"sigma\"         \"clock\"         \"loglikelihood\" #> [9] \"logprior\""},{"path":"https://sbfnk.github.io/rbi/reference/bi_dim_len.html","id":null,"dir":"Reference","previous_headings":"","what":"NetCDF dimension length — bi_dim_len","title":"NetCDF dimension length — bi_dim_len","text":"function returns length dimension NetCDF file.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/bi_dim_len.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NetCDF dimension length — bi_dim_len","text":"","code":"bi_dim_len(filename, dim)"},{"path":"https://sbfnk.github.io/rbi/reference/bi_dim_len.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NetCDF dimension length — bi_dim_len","text":"filename path NetCDF file dim name dimension check","code":""},{"path":"https://sbfnk.github.io/rbi/reference/bi_dim_len.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NetCDF dimension length — bi_dim_len","text":"number, dimension length","code":""},{"path":"https://sbfnk.github.io/rbi/reference/bi_file_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"NetCDF File Summary — bi_file_summary","title":"NetCDF File Summary — bi_file_summary","text":"function prints little summary content NetCDF file, well creation time. can retrieve variables interest using bi_read.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/bi_file_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NetCDF File Summary — bi_file_summary","text":"","code":"bi_file_summary(...)"},{"path":"https://sbfnk.github.io/rbi/reference/bi_file_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NetCDF File Summary — bi_file_summary","text":"... extra parameters bi_open, especially x file","code":""},{"path":"https://sbfnk.github.io/rbi/reference/bi_file_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NetCDF File Summary — bi_file_summary","text":"return value","code":""},{"path":"https://sbfnk.github.io/rbi/reference/bi_file_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NetCDF File Summary — bi_file_summary","text":"","code":"example_output_file <- system.file(package = \"rbi\", \"example_output.nc\") bi_file_summary(example_output_file) #> File /home/runner/work/_temp/Library/rbi/example_output.nc (NC_FORMAT_NETCDF4): #>  #>      9 variables (excluding dimension variables): #>         double time[nr]   (Contiguous storage)   #>         double alpha[np,nr]   (Contiguous storage)   #>         double P[np,nr]   (Contiguous storage)   #>         double Z[np,nr]   (Contiguous storage)   #>         double mu[np]   (Contiguous storage)   #>         double sigma[np]   (Contiguous storage)   #>         8 byte int clock[]   (Contiguous storage)   #>         double loglikelihood[np]   (Contiguous storage)   #>         double logprior[np]   (Contiguous storage)   #>  #>      2 dimensions: #>         nr  Size:51 (no dimvar) #>         np  Size:128 (no dimvar) #>  #>     3 global attributes: #>         libbi_schema: MCMC #>         libbi_schema_version: 1 #>         libbi_version: 1.3.0"},{"path":"https://sbfnk.github.io/rbi/reference/bi_generate_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Bi Generate Dataset — bi_generate_dataset","title":"Bi Generate Dataset — bi_generate_dataset","text":"function deprecated renamed generate_dataset","code":""},{"path":"https://sbfnk.github.io/rbi/reference/bi_generate_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bi Generate Dataset — bi_generate_dataset","text":"","code":"bi_generate_dataset(..., output_every = 1)"},{"path":"https://sbfnk.github.io/rbi/reference/bi_generate_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bi Generate Dataset — bi_generate_dataset","text":"... arguments passed sample.libbi, especially 'model', 'end_time' 'seed'. output_every real; given, noutputs set output every output_every time steps; set 0, generate output final time","code":""},{"path":"https://sbfnk.github.io/rbi/reference/bi_generate_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bi Generate Dataset — bi_generate_dataset","text":"libbi object, generated data set","code":""},{"path":"https://sbfnk.github.io/rbi/reference/bi_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Bi Model — bi_model","title":"Bi Model — bi_model","text":"bi_model creates model object Rbi libbi file, URL   character vector.  instance created, model can fed   libbi object.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/bi_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bi Model — bi_model","text":"","code":"bi_model(filename, lines, ...)"},{"path":"https://sbfnk.github.io/rbi/reference/bi_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bi Model — bi_model","text":"filename file name model file lines lines model (filename given), character vector ... ignored","code":""},{"path":"https://sbfnk.github.io/rbi/reference/bi_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bi Model — bi_model","text":"{bi_model} object containing newly created model","code":""},{"path":[]},{"path":"https://sbfnk.github.io/rbi/reference/bi_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bi Model — bi_model","text":"","code":"model_file_name <- system.file(package = \"rbi\", \"PZ.bi\") PZ <- bi_model(filename = model_file_name)"},{"path":"https://sbfnk.github.io/rbi/reference/bi_open.html","id":null,"dir":"Reference","previous_headings":"","what":"Bi Open — bi_open","title":"Bi Open — bi_open","text":"function opens NetCDF file file can specified string filepath, case NetCDF connection opened, directly NetCDF connection.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/bi_open.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bi Open — bi_open","text":"","code":"bi_open(x, file = \"output\")"},{"path":"https://sbfnk.github.io/rbi/reference/bi_open.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bi Open — bi_open","text":"x either path NetCDF file, NetCDF connection created using nc_open, libbi object read output file file open (\"input\", \"init\", \"obs\", \"output\"), x given libbi object; default, read output file","code":""},{"path":"https://sbfnk.github.io/rbi/reference/bi_open.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bi Open — bi_open","text":"open NetCDF connection","code":""},{"path":"https://sbfnk.github.io/rbi/reference/bi_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Bi Read — bi_read","title":"Bi Read — bi_read","text":"function reads variable NetCDF file output libbi object. file can specified string filepath, case NetCDF connection opened, directly NetCDF connection.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/bi_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bi Read — bi_read","text":"","code":"bi_read(   x,   vars,   dims,   model,   type,   file,   missval_threshold,   coord_dims = list(),   thin,   verbose = FALSE,   clear_cache = FALSE,   init_to_param = FALSE,   burn = 0 )"},{"path":"https://sbfnk.github.io/rbi/reference/bi_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bi Read — bi_read","text":"x either path NetCDF file, NetCDF connection created using nc_open, libbi object read output vars variables read; given, read dims factors dimensions model model file bi_model object (x libbi object) type vector types variable read (\"param\", \"state\", \"noise\", \"obs\"). needs 'x' libbi object model specified file file read (x given libbi object): one \"output\" (default), \"init\", \"input\", \"obs\" missval_threshold upper threshold likelihood coord_dims coord dimensions, given named list character vectors, element corresponds variable name, character vector coord dimensions thin thinning (keep 1/thin samples) verbose TRUE, print variables read clear_cache TRUE, clear cache re-read file even cached data exists init_to_param logical; TRUE, convert states initial values burn number initial samples discard; default: 0","code":""},{"path":"https://sbfnk.github.io/rbi/reference/bi_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bi Read — bi_read","text":"list data frames /numbers read","code":""},{"path":"https://sbfnk.github.io/rbi/reference/bi_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bi Read — bi_read","text":"","code":"example_output_file <- system.file(package = \"rbi\", \"example_output.nc\") d <- bi_read(example_output_file)"},{"path":"https://sbfnk.github.io/rbi/reference/bi_write.html","id":null,"dir":"Reference","previous_headings":"","what":"Create (e.g., init or observation) files for LibBi — bi_write","title":"Create (e.g., init or observation) files for LibBi — bi_write","text":"function creates (appends ) NetCDF file LibBi given   list vectors /data frames. Since files can passed   libbi directly via init, input   obs options, mostly used internally, mostly used   internally.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/bi_write.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create (e.g., init or observation) files for LibBi — bi_write","text":"","code":"bi_write(   filename,   variables,   append = FALSE,   overwrite = FALSE,   time_dim,   coord_dims,   dim_factors,   value_column = \"value\",   guess_time = FALSE,   verbose )"},{"path":"https://sbfnk.github.io/rbi/reference/bi_write.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create (e.g., init or observation) files for LibBi — bi_write","text":"filename path NetCDF file write variables , overwritten already exists. necessary, \".nc\" added file name variables list object, names variable names values either single values data frames append TRUE, append variables file exists; default: FALSE overwrite TRUE, overwrite variables file exists; default: FALSE time_dim name time dimension, one exists; default: \"time\" coord_dims names coordinate dimension, ; named list character vectors, matched variables names dim_factors factors dimensions ; corresponds dims element libbi object value_column variables data frames, column contains values (default: \"value\") guess_time whether guess time dimension; numerical column data frame given value_column; one column must exist verbose TRUE, print variables read","code":""},{"path":"https://sbfnk.github.io/rbi/reference/bi_write.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create (e.g., init or observation) files for LibBi — bi_write","text":"list time coord dims, factors extra dimensions,   ","code":""},{"path":"https://sbfnk.github.io/rbi/reference/bi_write.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create (e.g., init or observation) files for LibBi — bi_write","text":"list variables must follow following rules. element list must one : 1) data frame value_column column (see option 'value_column')   number columns indicating one dimensions 2) numeric vector length one, dimensions name list elements used create corresponding variable NetCDF file.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/bi_write.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create (e.g., init or observation) files for LibBi — bi_write","text":"","code":"filename <- tempfile(pattern = \"dummy\", fileext = \".nc\") a <- 3 b <- data.frame(   dim_a = rep(1:3, time = 2), dim_b = rep(1:2, each = 3), value = 1:6 ) variables <- list(a = a, b = b) bi_write(filename, variables) #> $time_dim #> NULL #>  #> $coord_dims #> $coord_dims$b #> [1] \"dim_a\" \"dim_b\" #>  #>  #> $dims #> list() #>  bi_file_summary(filename) #> File /tmp/Rtmpt5u9X9/dummy36e73f627162.nc (NC_FORMAT_CLASSIC): #>  #>      2 variables (excluding dimension variables): #>         float a[]    #>         float b[dim_a,dim_b]    #>  #>      2 dimensions: #>         dim_a  Size:3  #>             long_name: dim_a #>         dim_b  Size:2  #>             long_name: dim_b"},{"path":"https://sbfnk.github.io/rbi/reference/check_sparse_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a variable is sparse — check_sparse_var","title":"Check if a variable is sparse — check_sparse_var","text":"Check variable sparse","code":""},{"path":"https://sbfnk.github.io/rbi/reference/check_sparse_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a variable is sparse — check_sparse_var","text":"","code":"check_sparse_var(x, coord_cols, value_column)"},{"path":"https://sbfnk.github.io/rbi/reference/check_sparse_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a variable is sparse — check_sparse_var","text":"x data.table coord_cols character vector coordinate columns value_column name value column","code":""},{"path":"https://sbfnk.github.io/rbi/reference/check_sparse_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a variable is sparse — check_sparse_var","text":"TRUE variable sparse, FALSE otherwise","code":""},{"path":"https://sbfnk.github.io/rbi/reference/check_sparse_var.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check if a variable is sparse — check_sparse_var","text":"Takes data.table given coordinate columns value column checks combinations coordinate columns present combination columns.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/check_sparse_var.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check if a variable is sparse — check_sparse_var","text":"Sebastian Funk","code":""},{"path":"https://sbfnk.github.io/rbi/reference/clean_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Strip model code to its bare bones — clean_model","title":"Strip model code to its bare bones — clean_model","text":"Cleans model working correct indents, removing long comments   merging lines","code":""},{"path":"https://sbfnk.github.io/rbi/reference/clean_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Strip model code to its bare bones — clean_model","text":"","code":"clean_model(x)"},{"path":"https://sbfnk.github.io/rbi/reference/clean_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Strip model code to its bare bones — clean_model","text":"x bi_model object","code":""},{"path":"https://sbfnk.github.io/rbi/reference/clean_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Strip model code to its bare bones — clean_model","text":"updated bi_model object","code":""},{"path":[]},{"path":"https://sbfnk.github.io/rbi/reference/create_coord_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a coordinate variable — create_coord_var","title":"Create a coordinate variable — create_coord_var","text":"Create coordinate variable","code":""},{"path":"https://sbfnk.github.io/rbi/reference/create_coord_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a coordinate variable — create_coord_var","text":"","code":"create_coord_var(   name,   dims,   dim_factors,   coord_dim,   index_table,   ns_dim,   time_dim,   nr_column,   value_column )"},{"path":"https://sbfnk.github.io/rbi/reference/create_coord_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a coordinate variable — create_coord_var","text":"name Name variable dims Dimensions variables dim_factors Factors dimensions coord_dim Coordinate dimension index_table data.table index columns ns_dim ns dimension time_dim time dimension nr_column nr column value_column value column","code":""},{"path":"https://sbfnk.github.io/rbi/reference/create_coord_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a coordinate variable — create_coord_var","text":"list information coordinate variable","code":""},{"path":"https://sbfnk.github.io/rbi/reference/create_coord_var.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a coordinate variable — create_coord_var","text":"Creates coordinate variable associated dimensions","code":""},{"path":"https://sbfnk.github.io/rbi/reference/create_coord_var.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a coordinate variable — create_coord_var","text":"Sebastian Funk","code":""},{"path":"https://sbfnk.github.io/rbi/reference/create_working_folder.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to create a temporary working folder — create_working_folder","title":"Internal function to create a temporary working folder — create_working_folder","text":"folder removed object destroyed","code":""},{"path":"https://sbfnk.github.io/rbi/reference/create_working_folder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to create a temporary working folder — create_working_folder","text":"","code":"create_working_folder(x)"},{"path":"https://sbfnk.github.io/rbi/reference/create_working_folder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function to create a temporary working folder — create_working_folder","text":"x libbi object","code":""},{"path":"https://sbfnk.github.io/rbi/reference/create_working_folder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function to create a temporary working folder — create_working_folder","text":"libbi object updated working folder","code":""},{"path":"https://sbfnk.github.io/rbi/reference/enable_outputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Enable outputting variables in a bi_model — enable_outputs","title":"Enable outputting variables in a bi_model — enable_outputs","text":"variable type given 'has_output=0' option removed   given model.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/enable_outputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enable outputting variables in a bi_model — enable_outputs","text":"","code":"enable_outputs(x, type = \"all\")"},{"path":"https://sbfnk.github.io/rbi/reference/enable_outputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enable outputting variables in a bi_model — enable_outputs","text":"x bi_model object type either \"\" (default), vector variable types outputs enabled","code":""},{"path":"https://sbfnk.github.io/rbi/reference/enable_outputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enable outputting variables in a bi_model — enable_outputs","text":"updated bi_model object","code":""},{"path":[]},{"path":"https://sbfnk.github.io/rbi/reference/enable_outputs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enable outputting variables in a bi_model — enable_outputs","text":"","code":"model_file_name <- system.file(package = \"rbi\", \"PZ.bi\") PZ <- bi_model(filename = model_file_name) PZ[6] <- \"param mu (has_output=0)\" PZ <- enable_outputs(PZ)"},{"path":"https://sbfnk.github.io/rbi/reference/extract_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a sample from a LibBi run. — extract_sample","title":"Extract a sample from a LibBi run. — extract_sample","text":"function takes provided libbi     results extracts data frame.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/extract_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a sample from a LibBi run. — extract_sample","text":"","code":"extract_sample(x, np, ...)"},{"path":"https://sbfnk.github.io/rbi/reference/extract_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a sample from a LibBi run. — extract_sample","text":"x libbi object run, list data frames containing parameter traces (returned bi_read) np iteration extract; set \"last\", last sample extracted. given random sample extracted ... parameters bi_read (e.g., dimensions)","code":""},{"path":"https://sbfnk.github.io/rbi/reference/extract_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a sample from a LibBi run. — extract_sample","text":"list data frames numeric vectors containing parameters trajectories","code":""},{"path":"https://sbfnk.github.io/rbi/reference/filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Using the LibBi wrapper to filter — filter","title":"Using the LibBi wrapper to filter — filter","text":"method filter launches libbi filter state trajectories.   See options run.libbi specify various   components sampling LibBi, LibBi manual options   can passed client filter. x given 'bi_model', libbi object   created model help page base R filter   function, see filter.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Using the LibBi wrapper to filter — filter","text":"","code":"# S3 method for libbi filter(x, ...)  # S3 method for bi_model filter(x, ...)"},{"path":"https://sbfnk.github.io/rbi/reference/filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Using the LibBi wrapper to filter — filter","text":"x libbi bi_model object, name file containing model ... options passed run.libbi","code":""},{"path":"https://sbfnk.github.io/rbi/reference/filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Using the LibBi wrapper to filter — filter","text":"updated libbi object","code":""},{"path":"https://sbfnk.github.io/rbi/reference/find_block.html","id":null,"dir":"Reference","previous_headings":"","what":"Find a block in a LibBi model — find_block","title":"Find a block in a LibBi model — find_block","text":"Finds block returns range line numbers encompassed   block.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/find_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find a block in a LibBi model — find_block","text":"","code":"# S3 method for bi_model find_block(x, name, inner = FALSE, ...)"},{"path":"https://sbfnk.github.io/rbi/reference/find_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find a block in a LibBi model — find_block","text":"x bi_model object name block find inner return inner part block (block definition) ... ignored","code":""},{"path":"https://sbfnk.github.io/rbi/reference/find_block.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find a block in a LibBi model — find_block","text":"integerr vector, range line numbers","code":""},{"path":[]},{"path":"https://sbfnk.github.io/rbi/reference/fix.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix noise term, state or parameter of a libbi model — fix","title":"Fix noise term, state or parameter of a libbi model — fix","text":"Replaces variables fixed values given ; note   replace differential equations lead error applied states   changed inside \"ode\" block help page base R fix function, see   fix.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/fix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix noise term, state or parameter of a libbi model — fix","text":"","code":"# S3 method for bi_model fix(x, ...)"},{"path":"https://sbfnk.github.io/rbi/reference/fix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix noise term, state or parameter of a libbi model — fix","text":"x bi_model object ... values assigned (named) variables","code":""},{"path":"https://sbfnk.github.io/rbi/reference/fix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix noise term, state or parameter of a libbi model — fix","text":"updated bi_model object","code":""},{"path":[]},{"path":"https://sbfnk.github.io/rbi/reference/fix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fix noise term, state or parameter of a libbi model — fix","text":"","code":"model_file_name <- system.file(package = \"rbi\", \"PZ.bi\") PZ <- bi_model(filename = model_file_name) PZ <- fix(PZ, alpha = 0)"},{"path":"https://sbfnk.github.io/rbi/reference/flatten.html","id":null,"dir":"Reference","previous_headings":"","what":"Flatten list of data frames\nThis function takes a list of data frames (such as, for example, returned by\n  bi_read) and converts it to a flat data frame — flatten","title":"Flatten list of data frames\nThis function takes a list of data frames (such as, for example, returned by\n  bi_read) and converts it to a flat data frame — flatten","text":"Flatten list data frames function takes list data frames (, example, returned   bi_read) converts flat data frame","code":""},{"path":"https://sbfnk.github.io/rbi/reference/flatten.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flatten list of data frames\nThis function takes a list of data frames (such as, for example, returned by\n  bi_read) and converts it to a flat data frame — flatten","text":"","code":"flatten(x)"},{"path":"https://sbfnk.github.io/rbi/reference/flatten.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flatten list of data frames\nThis function takes a list of data frames (such as, for example, returned by\n  bi_read) and converts it to a flat data frame — flatten","text":"x list data frames","code":""},{"path":"https://sbfnk.github.io/rbi/reference/flatten.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flatten list of data frames\nThis function takes a list of data frames (such as, for example, returned by\n  bi_read) and converts it to a flat data frame — flatten","text":"data frame containing flattened data","code":""},{"path":"https://sbfnk.github.io/rbi/reference/generate_dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Dataset — generate_dataset","title":"Generate Dataset — generate_dataset","text":"wrapper around libbi sample --target joint   --nsamples 1, generate synthetic dataset model. Parameters can   passed via 'init' option (see run.libbi, otherwise   generated prior specified model. end time   specified using \"end_time\" option. given,   parameter set sampled. Use 'noutputs' 'output_every' options   control number data points generated. default, output_every   set 1.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/generate_dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Dataset — generate_dataset","text":"","code":"generate_dataset(..., output_every = 1)"},{"path":"https://sbfnk.github.io/rbi/reference/generate_dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Dataset — generate_dataset","text":"... arguments passed sample.libbi, especially 'model', 'end_time' 'seed'. output_every real; given, noutputs set output every output_every time steps; set 0, generate output final time","code":""},{"path":"https://sbfnk.github.io/rbi/reference/generate_dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Dataset — generate_dataset","text":"libbi object, generated data set","code":""},{"path":"https://sbfnk.github.io/rbi/reference/get_block.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the contents of a block in a LibBi model — get_block","title":"Get the contents of a block in a LibBi model — get_block","text":"Returns contents block LibBi model character vector   lines.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/get_block.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the contents of a block in a LibBi model — get_block","text":"","code":"# S3 method for bi_model get_block(x, name, shell = FALSE, ...)"},{"path":"https://sbfnk.github.io/rbi/reference/get_block.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the contents of a block in a LibBi model — get_block","text":"x bi_model object name name block shell TRUE (default:FALSE), return shell (.e., definition block) well content; useful, e.g., see options passed transition ode block ... ignored","code":""},{"path":"https://sbfnk.github.io/rbi/reference/get_block.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the contents of a block in a LibBi model — get_block","text":"character vector lines block","code":""},{"path":"https://sbfnk.github.io/rbi/reference/get_const.html","id":null,"dir":"Reference","previous_headings":"","what":"Get constants in a LibBi model — get_const","title":"Get constants in a LibBi model — get_const","text":"Get constants contained LibBi model values. attempt   evaluate calculation right hand side. Failing ,   returned verbatim.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/get_const.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get constants in a LibBi model — get_const","text":"","code":"get_const(model)"},{"path":"https://sbfnk.github.io/rbi/reference/get_const.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get constants in a LibBi model — get_const","text":"model bi_model object","code":""},{"path":"https://sbfnk.github.io/rbi/reference/get_const.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get constants in a LibBi model — get_const","text":"list constants (names) values","code":""},{"path":"https://sbfnk.github.io/rbi/reference/get_dims.html","id":null,"dir":"Reference","previous_headings":"","what":"Get dimensions in a LibBi model — get_dims","title":"Get dimensions in a LibBi model — get_dims","text":"Get dimensions contained LibBi model sizes","code":""},{"path":"https://sbfnk.github.io/rbi/reference/get_dims.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get dimensions in a LibBi model — get_dims","text":"","code":"get_dims(model, type)"},{"path":"https://sbfnk.github.io/rbi/reference/get_dims.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get dimensions in a LibBi model — get_dims","text":"model bi_model object type character vector one types","code":""},{"path":"https://sbfnk.github.io/rbi/reference/get_dims.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get dimensions in a LibBi model — get_dims","text":"list dimensions (names) sizes","code":""},{"path":"https://sbfnk.github.io/rbi/reference/get_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the name of a bi model — get_name","title":"Get the name of a bi model — get_name","text":"Extracts name bi model (first line .bi file).","code":""},{"path":"https://sbfnk.github.io/rbi/reference/get_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the name of a bi model — get_name","text":"","code":"# S3 method for bi_model get_name(x, ...)"},{"path":"https://sbfnk.github.io/rbi/reference/get_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the name of a bi model — get_name","text":"x bi_model object ... ignored","code":""},{"path":"https://sbfnk.github.io/rbi/reference/get_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the name of a bi model — get_name","text":"character string, name model","code":""},{"path":[]},{"path":"https://sbfnk.github.io/rbi/reference/get_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the name of a bi model — get_name","text":"","code":"model_file_name <- system.file(package = \"rbi\", \"PZ.bi\") PZ <- bi_model(filename = model_file_name) get_name(PZ) #> [1] \"PZ\""},{"path":"https://sbfnk.github.io/rbi/reference/get_traces.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the parameter traces — get_traces","title":"Get the parameter traces — get_traces","text":"function takes provided libbi object     run returns data frame parameter     traces.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/get_traces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the parameter traces — get_traces","text":"","code":"get_traces(x, model, burnin, all = FALSE, ...)"},{"path":"https://sbfnk.github.io/rbi/reference/get_traces.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the parameter traces — get_traces","text":"x libbi object run, list data frames containing parameter traces (returned bi_read); libbi object, either '' must TRUE model given model model get parameter names ; needed 'run' given libbi object '' set TRUE burnin proportion iterations discard burn-(0 1), number samples discard (>1) whether variables run file considered (otherwise, just parameters) ... parameters bi_read (e.g., dimensions)","code":""},{"path":"https://sbfnk.github.io/rbi/reference/get_traces.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the parameter traces — get_traces","text":"ata frame parameter traces; can fed  coda routines","code":""},{"path":"https://sbfnk.github.io/rbi/reference/insert_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert lines in a LibBi model — insert_lines","title":"Insert lines in a LibBi model — insert_lines","text":"Inserts one lines libbi model. one   given, line(s) inserted given   line number block name, respectively. one at_beginning   at_end_of given, lines inserted   beginning/end block, respectively.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/insert_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert lines in a LibBi model — insert_lines","text":"","code":"# S3 method for bi_model insert_lines(x, lines, before, after, at_beginning_of, at_end_of, ...)"},{"path":"https://sbfnk.github.io/rbi/reference/insert_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert lines in a LibBi model — insert_lines","text":"x bi_model object lines vector line(s) line number insert line(s) line number insert line(s) at_beginning_of block beginning insert lines(s) at_end_of block end insert lines(s) ... ignored","code":""},{"path":"https://sbfnk.github.io/rbi/reference/insert_lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert lines in a LibBi model — insert_lines","text":"updated bi_model object","code":""},{"path":[]},{"path":"https://sbfnk.github.io/rbi/reference/insert_lines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insert lines in a LibBi model — insert_lines","text":"","code":"model_file_name <- system.file(package = \"rbi\", \"PZ.bi\") PZ <- bi_model(filename = model_file_name) PZ <- insert_lines(PZ, lines = \"noise beta\", after = 8)"},{"path":"https://sbfnk.github.io/rbi/reference/installed_libbi_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the LibBi version — installed_libbi_version","title":"Get the LibBi version — installed_libbi_version","text":"tries find libbi executable determine installed version LibBi","code":""},{"path":"https://sbfnk.github.io/rbi/reference/installed_libbi_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the LibBi version — installed_libbi_version","text":"","code":"installed_libbi_version(...)"},{"path":"https://sbfnk.github.io/rbi/reference/installed_libbi_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the LibBi version — installed_libbi_version","text":"... arguments locate_libbi (esp. path_to_libbi)","code":""},{"path":"https://sbfnk.github.io/rbi/reference/installed_libbi_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the LibBi version — installed_libbi_version","text":"character string installed version","code":""},{"path":"https://sbfnk.github.io/rbi/reference/installed_libbi_version.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get the LibBi version — installed_libbi_version","text":"Sebastian Funk","code":""},{"path":"https://sbfnk.github.io/rbi/reference/is_empty.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a model is empty — is_empty","title":"Check if a model is empty — is_empty","text":"Checks model empty (.e., initialised without content)","code":""},{"path":"https://sbfnk.github.io/rbi/reference/is_empty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a model is empty — is_empty","text":"","code":"is_empty(x)"},{"path":"https://sbfnk.github.io/rbi/reference/is_empty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a model is empty — is_empty","text":"x bi_model object","code":""},{"path":"https://sbfnk.github.io/rbi/reference/is_empty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a model is empty — is_empty","text":"TRUE FALSE, depending whether model empty","code":""},{"path":[]},{"path":"https://sbfnk.github.io/rbi/reference/join.html","id":null,"dir":"Reference","previous_headings":"","what":"Join multiple libbi objects — join","title":"Join multiple libbi objects — join","text":"function can used join multiple libbi objects   one (e.g., parallel MCMC runs one long change)","code":""},{"path":"https://sbfnk.github.io/rbi/reference/join.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join multiple libbi objects — join","text":"","code":"# S3 method for libbi join(x, ...)"},{"path":"https://sbfnk.github.io/rbi/reference/join.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join multiple libbi objects — join","text":"x libbi object ... ignored","code":""},{"path":"https://sbfnk.github.io/rbi/reference/join.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join multiple libbi objects — join","text":"joined libbi object","code":""},{"path":"https://sbfnk.github.io/rbi/reference/libbi.html","id":null,"dir":"Reference","previous_headings":"","what":"LibBi Wrapper — libbi","title":"LibBi Wrapper — libbi","text":"libbi allows call LibBi. Upon creating new libbi object, following arguments can given. instance created, LibBi can run   sample, filter,   optimise, rewrite methods. Note   libbi objects can plotted using plot   rbi.helpers package loaded.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/libbi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LibBi Wrapper — libbi","text":"","code":"libbi(model, path_to_libbi, dims, use_cache = TRUE, ...)"},{"path":"https://sbfnk.github.io/rbi/reference/libbi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LibBi Wrapper — libbi","text":"model either character vector giving path model file (typically ending \".bi\"), bi_model object path_to_libbi path LibBi binary; default tries locate libbi binary using Unix command, loaded \"~/.bashrc\" present; unsuccessful tries \"~/PathToBiBin/libbi\"; unsuccessful fails. dims named dimensions, list character vectors use_cache logical; whether use cache (default: true) ... options passed run.libbi","code":""},{"path":"https://sbfnk.github.io/rbi/reference/libbi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LibBi Wrapper — libbi","text":"new libbi object","code":""},{"path":[]},{"path":"https://sbfnk.github.io/rbi/reference/libbi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"LibBi Wrapper — libbi","text":"","code":"bi_object <- libbi(model = system.file(package = \"rbi\", \"PZ.bi\"))"},{"path":"https://sbfnk.github.io/rbi/reference/locate_libbi.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the libbi executable — locate_libbi","title":"Find the libbi executable — locate_libbi","text":"tries find libbi executable; find libbi installed, location can either passed function, set globally via `options(path_to_libbi=\"/insert/full/path/\").","code":""},{"path":"https://sbfnk.github.io/rbi/reference/locate_libbi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the libbi executable — locate_libbi","text":"","code":"locate_libbi(path_to_libbi)"},{"path":"https://sbfnk.github.io/rbi/reference/locate_libbi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the libbi executable — locate_libbi","text":"path_to_libbi path libbi, either path libbi executable resides, full path executable","code":""},{"path":"https://sbfnk.github.io/rbi/reference/locate_libbi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find the libbi executable — locate_libbi","text":"full path libbi executable character string;   found, error thrown","code":""},{"path":"https://sbfnk.github.io/rbi/reference/locate_libbi.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Find the libbi executable — locate_libbi","text":"Sebastian Funk","code":""},{"path":"https://sbfnk.github.io/rbi/reference/logLik.html","id":null,"dir":"Reference","previous_headings":"","what":"Using the LibBi wrapper to logLik — logLik","title":"Using the LibBi wrapper to logLik — logLik","text":"method logLik extracts log-likelihood libbi   object. can done, example, call   sample inspect chain log-likelihoods. help page base R logLik function, see   logLik.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/logLik.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Using the LibBi wrapper to logLik — logLik","text":"","code":"# S3 method for libbi logLik(object, ...)"},{"path":"https://sbfnk.github.io/rbi/reference/logLik.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Using the LibBi wrapper to logLik — logLik","text":"object libbi object ... options passed run.libbi","code":""},{"path":"https://sbfnk.github.io/rbi/reference/logLik.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Using the LibBi wrapper to logLik — logLik","text":"vector log-likelihood","code":""},{"path":"https://sbfnk.github.io/rbi/reference/optimise.html","id":null,"dir":"Reference","previous_headings":"","what":"Using the LibBi wrapper to optimise — optimise","title":"Using the LibBi wrapper to optimise — optimise","text":"method optimise launches libbi optimise parameters   respect likelihood posterior distribution. See options   run.libbi specify various components   sampling LibBi, LibBi manual options can   passed client optimise. x given 'bi_model', libbi object   created model help page base R optimise   function, see optimise.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/optimise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Using the LibBi wrapper to optimise — optimise","text":"","code":"# S3 method for libbi optimise(x, ...)  # S3 method for bi_model optimise(x, ...)"},{"path":"https://sbfnk.github.io/rbi/reference/optimise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Using the LibBi wrapper to optimise — optimise","text":"x libbi link{bi_model} object, name file containing model ... options passed run.libbi","code":""},{"path":"https://sbfnk.github.io/rbi/reference/optimise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Using the LibBi wrapper to optimise — optimise","text":"updated libbi object","code":""},{"path":"https://sbfnk.github.io/rbi/reference/option_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert string to option list — option_list","title":"Convert string to option list — option_list","text":"function used convert option string list options.   list given, kept ","code":""},{"path":"https://sbfnk.github.io/rbi/reference/option_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert string to option list — option_list","text":"","code":"option_list(...)"},{"path":"https://sbfnk.github.io/rbi/reference/option_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert string to option list — option_list","text":"... number strings convert","code":""},{"path":"https://sbfnk.github.io/rbi/reference/option_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert string to option list — option_list","text":"list options values","code":""},{"path":"https://sbfnk.github.io/rbi/reference/option_string.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Options — option_string","title":"Convert Options — option_string","text":"function used convert list options options string.   string given,  taken .","code":""},{"path":"https://sbfnk.github.io/rbi/reference/option_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Options — option_string","text":"","code":"option_string(...)"},{"path":"https://sbfnk.github.io/rbi/reference/option_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Options — option_string","text":"... number lists options, strings (left unmodified). lists given, later arguments override earlier ones","code":""},{"path":"https://sbfnk.github.io/rbi/reference/predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Using the LibBi wrapper to predict — predict","title":"Using the LibBi wrapper to predict — predict","text":"method predict alias sample(target=\"prediction\").   Usually, init object file given containing posterior   samples. help page base R optimise function, see   optimise.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Using the LibBi wrapper to predict — predict","text":"","code":"# S3 method for libbi predict(x, ...)"},{"path":"https://sbfnk.github.io/rbi/reference/predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Using the LibBi wrapper to predict — predict","text":"x libbi object ... arguments passed sample","code":""},{"path":"https://sbfnk.github.io/rbi/reference/predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Using the LibBi wrapper to predict — predict","text":"updated libbi object","code":""},{"path":"https://sbfnk.github.io/rbi/reference/print.html","id":null,"dir":"Reference","previous_headings":"","what":"Print the lines of a LibBi model — print.bi_model","title":"Print the lines of a LibBi model — print.bi_model","text":"Prints lines LibBi model prints model name, basic information number iterations   timesteps run, well list variables.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/print.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print the lines of a LibBi model — print.bi_model","text":"","code":"# S3 method for bi_model print(x, spaces = 2, screen = TRUE, ...)  # S3 method for libbi print(x, verbose = FALSE, ...)"},{"path":"https://sbfnk.github.io/rbi/reference/print.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print the lines of a LibBi model — print.bi_model","text":"x libbi object spaces number spaces indentation screen whether print screen (default: TRUE). case, line numbers added; otherwise, character vector returned. ... ignored verbose logical; TRUE, locations files working folder printed","code":""},{"path":"https://sbfnk.github.io/rbi/reference/print.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print the lines of a LibBi model — print.bi_model","text":"screen FALSE, character vector model lines nothing (invisible NULL)","code":""},{"path":"https://sbfnk.github.io/rbi/reference/print_log.html","id":null,"dir":"Reference","previous_headings":"","what":"Print the log file a libbi object — print_log","title":"Print the log file a libbi object — print_log","text":"useful diagnosis libbi run","code":""},{"path":"https://sbfnk.github.io/rbi/reference/print_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print the log file a libbi object — print_log","text":"","code":"print_log(x)"},{"path":"https://sbfnk.github.io/rbi/reference/print_log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print the log file a libbi object — print_log","text":"x libbi object, name log file libbi run.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/print_log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print the log file a libbi object — print_log","text":"nothing (invisible NULL)","code":""},{"path":"https://sbfnk.github.io/rbi/reference/propose_prior.html","id":null,"dir":"Reference","previous_headings":"","what":"Propose from the prior in a libbi model — propose_prior","title":"Propose from the prior in a libbi model — propose_prior","text":"Generates version model proposal blocks replaced   prior blocks. useful exploration likelihood surface.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/propose_prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Propose from the prior in a libbi model — propose_prior","text":"","code":"propose_prior(x)"},{"path":"https://sbfnk.github.io/rbi/reference/propose_prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Propose from the prior in a libbi model — propose_prior","text":"x bi_model object","code":""},{"path":"https://sbfnk.github.io/rbi/reference/propose_prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Propose from the prior in a libbi model — propose_prior","text":"updated bi_model object","code":""},{"path":[]},{"path":"https://sbfnk.github.io/rbi/reference/read_libbi.html","id":null,"dir":"Reference","previous_headings":"","what":"Read results of a LibBi run from an RDS file or from a folder.\n  This completely reconstructs the saved LibBi object — read_libbi","title":"Read results of a LibBi run from an RDS file or from a folder.\n  This completely reconstructs the saved LibBi object — read_libbi","text":"reads options, files outputs LibBi run   specified RDS file folder (split = TRUE used   save_libbi).","code":""},{"path":"https://sbfnk.github.io/rbi/reference/read_libbi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read results of a LibBi run from an RDS file or from a folder.\n  This completely reconstructs the saved LibBi object — read_libbi","text":"","code":"read_libbi(name, ...)"},{"path":"https://sbfnk.github.io/rbi/reference/read_libbi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read results of a LibBi run from an RDS file or from a folder.\n  This completely reconstructs the saved LibBi object — read_libbi","text":"name name RDS file(s) read ... extra options pass libbi creating new object","code":""},{"path":"https://sbfnk.github.io/rbi/reference/read_libbi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read results of a LibBi run from an RDS file or from a folder.\n  This completely reconstructs the saved LibBi object — read_libbi","text":"new libbi object","code":""},{"path":"https://sbfnk.github.io/rbi/reference/remove_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove line(s) and/or block(s) in a libbi model — remove_lines","title":"Remove line(s) and/or block(s) in a libbi model — remove_lines","text":"Removes one lines libbi model.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/remove_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove line(s) and/or block(s) in a libbi model — remove_lines","text":"","code":"# S3 method for bi_model remove_lines(   x,   what,   only,   type = c(\"all\", \"assignment\", \"sample\"),   preserve_shell = FALSE,   ... )"},{"path":"https://sbfnk.github.io/rbi/reference/remove_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove line(s) and/or block(s) in a libbi model — remove_lines","text":"x bi_model object either vector line number(s) remove, vector blocks remove (e.g., \"parameter\") remove lines assigning given names (vector character strings) type types lines remove, either \"\", \"sample\" (.e., lines \"~\") \"assignment\" (lines \"<-\" \"=\") (default: \"\") preserve_shell TRUE (default: FALSE), preserve definition block even lines removed; useful preserve options passed transition ode block ... ignored","code":""},{"path":"https://sbfnk.github.io/rbi/reference/remove_lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove line(s) and/or block(s) in a libbi model — remove_lines","text":"updated bi_model object","code":""},{"path":[]},{"path":"https://sbfnk.github.io/rbi/reference/remove_lines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove line(s) and/or block(s) in a libbi model — remove_lines","text":"","code":"model_file_name <- system.file(package = \"rbi\", \"PZ.bi\") PZ <- bi_model(filename = model_file_name) PZ <- remove_lines(PZ, 2)"},{"path":"https://sbfnk.github.io/rbi/reference/remove_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove variables — remove_vars","title":"Remove variables — remove_vars","text":"Removes variables left-hand side model Used fix to_input","code":""},{"path":"https://sbfnk.github.io/rbi/reference/remove_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove variables — remove_vars","text":"","code":"remove_vars(x, vars)"},{"path":"https://sbfnk.github.io/rbi/reference/remove_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove variables — remove_vars","text":"x bi_model object vars vector variables remove","code":""},{"path":"https://sbfnk.github.io/rbi/reference/remove_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove variables — remove_vars","text":"bi model object new model updated bi_model object","code":""},{"path":[]},{"path":"https://sbfnk.github.io/rbi/reference/replace_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace all instances of a string with another in a model — replace_all","title":"Replace all instances of a string with another in a model — replace_all","text":"Takes every occurrence one string replaces another","code":""},{"path":"https://sbfnk.github.io/rbi/reference/replace_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace all instances of a string with another in a model — replace_all","text":"","code":"# S3 method for bi_model replace_all(x, from, to, ...)"},{"path":"https://sbfnk.github.io/rbi/reference/replace_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace all instances of a string with another in a model — replace_all","text":"x bi_model object string replaced (regular expression) new string (can refer regular expression given ) ... ignored","code":""},{"path":"https://sbfnk.github.io/rbi/reference/replace_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace all instances of a string with another in a model — replace_all","text":"updated bi_model object","code":""},{"path":[]},{"path":"https://sbfnk.github.io/rbi/reference/rewrite.html","id":null,"dir":"Reference","previous_headings":"","what":"Using the LibBi wrapper to rewrite — rewrite","title":"Using the LibBi wrapper to rewrite — rewrite","text":"method rewrite launches LibBi rewrite model inspect   internal representation LibBi x given 'bi_model', libbi object   created model","code":""},{"path":"https://sbfnk.github.io/rbi/reference/rewrite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Using the LibBi wrapper to rewrite — rewrite","text":"","code":"# S3 method for libbi rewrite(x, ...)  # S3 method for bi_model rewrite(x, ...)"},{"path":"https://sbfnk.github.io/rbi/reference/rewrite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Using the LibBi wrapper to rewrite — rewrite","text":"x libbi bi_model object, name file containing model ... options passed run.libbi","code":""},{"path":"https://sbfnk.github.io/rbi/reference/rewrite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Using the LibBi wrapper to rewrite — rewrite","text":"re-written bi_model object","code":""},{"path":"https://sbfnk.github.io/rbi/reference/run.html","id":null,"dir":"Reference","previous_headings":"","what":"Using the LibBi wrapper to launch LibBi — run","title":"Using the LibBi wrapper to launch LibBi — run","text":"method run launches LibBi particular set command   line arguments. Normally, function run user,   instead one client functions sample,   filter, optimise, rewrite,   pass options run. Note options specified   stored libbi object   specified another command run object.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Using the LibBi wrapper to launch LibBi — run","text":"","code":"# S3 method for libbi run(   x,   client,   proposal = c(\"model\", \"prior\"),   model,   fix,   config,   log_file_name = character(0),   init,   input,   obs,   time_dim = character(0),   coord_dims = list(),   thin,   output_every,   chain = TRUE,   seed = TRUE,   debug = FALSE,   ... )"},{"path":"https://sbfnk.github.io/rbi/reference/run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Using the LibBi wrapper to launch LibBi — run","text":"x libbi object; given, empty libbi object created client client pass LibBi proposal proposal distribution use; either \"model\" (default: proposal distribution model) \"prior\" (propose prior distribution) model either character vector giving path model file (typically ending \".bi\"), bi_model object; default, use model given x fix variable fix, named vector config path configuration file, containing multiple arguments log_file_name path file text file report output LibBi; set empty vector (character(0)) empty string (\"\"), default, temporary log file generated init initialisation model, either supplied list values /data frames, (netcdf) file name, libbi object run (case output run used). object given x run , used init-np set last iteration previous run, unless init given explicitly. input input model, either supplied list values /data frames, (netcdf) file name, libbi object run (case output run used input) obs observations model, either supplied list values /data frames, (netcdf) file name, libbi object run (case output run used observations) time_dim time dimension R objects passed (init, input) obs); NULL (default), guessed given observation coord_dims coord dimension(s) obs R objects passed; NULL (default), guessed given observation file given thin thinning MCMC chains (1 means kept, 2 skips every sample etc.); note LibBi write data disk. results read bi_read thinning applied. output_every real; given, noutputs set output every output_every time steps; set 0, generate output final time chain logical; set TRUE x run , previous output file used init file, init-np set last iteration previous run (unless target==\"prediction\"). useful running inference chains. seed Either number (seed supply LibBi), logical variable: TRUE seed generated RBi, FALSE LibBi generate seed debug logical; TRUE, print verbose messages write variables output file, irrespective setting 'has_output' ... list additional arguments pass call LibBi. arguments starting `enable`/`disable` can specified boolean (e.g., `assert=TRUE` `cuda=TRUE`). `dry-` options can specified `\"dry\"` argument, e.g., `dry=\"parse\"`. options specified ``/`without` can specified character vector option named ``/`without`, respectively, e.g. =\"transform-obs--state\".","code":""},{"path":"https://sbfnk.github.io/rbi/reference/run.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Using the LibBi wrapper to launch LibBi — run","text":"updated libbi object, except client   'rewrite', case invisible NULL returned rewritten   model code printed","code":""},{"path":[]},{"path":"https://sbfnk.github.io/rbi/reference/sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Using the LibBi wrapper to sample — sample","title":"Using the LibBi wrapper to sample — sample","text":"method sample launches libbi sample (prior,   posterior joint) distribution. See options   run.libbi specify various components   sampling LibBi, LibBi manual options can   passed client sample. x given 'bi_model', libbi object   created model help page base R sample   function, see sample.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Using the LibBi wrapper to sample — sample","text":"","code":"# S3 method for libbi sample(x, ...)  # S3 method for bi_model sample(x, ...)"},{"path":"https://sbfnk.github.io/rbi/reference/sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Using the LibBi wrapper to sample — sample","text":"x libbi bi_model object, name file containing model ... options passed run.libbi","code":""},{"path":"https://sbfnk.github.io/rbi/reference/sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Using the LibBi wrapper to sample — sample","text":"updated libbi object","code":""},{"path":"https://sbfnk.github.io/rbi/reference/sample_obs.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample observations from a LibBi model that has been run — sample_obs","title":"Sample observations from a LibBi model that has been run — sample_obs","text":"Sample observations LibBi model run","code":""},{"path":"https://sbfnk.github.io/rbi/reference/sample_obs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample observations from a LibBi model that has been run — sample_obs","text":"","code":"sample_obs(x, ...)"},{"path":"https://sbfnk.github.io/rbi/reference/sample_obs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample observations from a LibBi model that has been run — sample_obs","text":"x libbi object ... options pass LibBi","code":""},{"path":"https://sbfnk.github.io/rbi/reference/sample_obs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample observations from a LibBi model that has been run — sample_obs","text":"original libbi object added variables   output file sampled observations","code":""},{"path":"https://sbfnk.github.io/rbi/reference/sample_obs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Sample observations from a LibBi model that has been run — sample_obs","text":"Sebastian Funk","code":""},{"path":"https://sbfnk.github.io/rbi/reference/save_libbi.html","id":null,"dir":"Reference","previous_headings":"","what":"Write results of a LibBi run to an RDS file — save_libbi","title":"Write results of a LibBi run to an RDS file — save_libbi","text":"saves options, files outputs LibBi run RDS   file specified","code":""},{"path":"https://sbfnk.github.io/rbi/reference/save_libbi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write results of a LibBi run to an RDS file — save_libbi","text":"","code":"# S3 method for libbi save_libbi(x, name, supplement, split = FALSE, ...)"},{"path":"https://sbfnk.github.io/rbi/reference/save_libbi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write results of a LibBi run to an RDS file — save_libbi","text":"x libbi object name name RDS file(s) save . split=TRUE, taken base names files created, e.g. 'dir/name.rds' create files form name_....rds directory 'dir'. supplement supplementary data save split Logical, defaults FALSE. objects LibBi run saved separately folder. ... options saveRDS","code":""},{"path":"https://sbfnk.github.io/rbi/reference/save_libbi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write results of a LibBi run to an RDS file — save_libbi","text":"return value saveRDS, .e. NULL invisibly","code":""},{"path":"https://sbfnk.github.io/rbi/reference/set_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the name of a bi model — set_name","title":"Set the name of a bi model — set_name","text":"Changes name bi model (first line .bi file) specified   name.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/set_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the name of a bi model — set_name","text":"","code":"# S3 method for bi_model set_name(x, name, ...)"},{"path":"https://sbfnk.github.io/rbi/reference/set_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the name of a bi model — set_name","text":"x bi_model object name Name model ... ignored","code":""},{"path":"https://sbfnk.github.io/rbi/reference/set_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the name of a bi model — set_name","text":"updated bi_model object","code":""},{"path":[]},{"path":"https://sbfnk.github.io/rbi/reference/set_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the name of a bi model — set_name","text":"","code":"model_file_name <- system.file(package = \"rbi\", \"PZ.bi\") PZ <- bi_model(filename = model_file_name) PZ <- set_name(PZ, \"new_PZ\")"},{"path":"https://sbfnk.github.io/rbi/reference/simulate.html","id":null,"dir":"Reference","previous_headings":"","what":"Using the LibBi wrapper to simulate — simulate","title":"Using the LibBi wrapper to simulate — simulate","text":"method simulate launches LibBi simulate model   passing `target=\"joint\"` LibBi x given 'bi_model', libbi object   created model","code":""},{"path":"https://sbfnk.github.io/rbi/reference/simulate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Using the LibBi wrapper to simulate — simulate","text":"","code":"# S3 method for libbi simulate(x, ...)  # S3 method for bi_model simulate(x, ...)"},{"path":"https://sbfnk.github.io/rbi/reference/simulate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Using the LibBi wrapper to simulate — simulate","text":"x libbi bi_model object, name file containing model ... options passed run.libbi","code":""},{"path":"https://sbfnk.github.io/rbi/reference/simulate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Using the LibBi wrapper to simulate — simulate","text":"updated bi_model object","code":""},{"path":"https://sbfnk.github.io/rbi/reference/summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Print summary information about a libbi object — summary","title":"Print summary information about a libbi object — summary","text":"reads output file libbi object (  run ) prints summary information parameters","code":""},{"path":"https://sbfnk.github.io/rbi/reference/summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print summary information about a libbi object — summary","text":"","code":"# S3 method for libbi summary(   object,   type = c(\"param\", \"state\", \"noise\", \"obs\"),   quantiles = c(0.25, 0.75),   na.rm = FALSE,   ... )"},{"path":"https://sbfnk.github.io/rbi/reference/summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print summary information about a libbi object — summary","text":"object libbi object type one \"param\" (default), \"state\", \"noise\" \"obs\", variable type summarise quantiles quantiles calculate (default: quartiles); minimum, median, mean maximum always calculated na.rm logical; true, na NaN's removed calculations performed ... ignored","code":""},{"path":"https://sbfnk.github.io/rbi/reference/summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print summary information about a libbi object — summary","text":"nothing (invisible NULL)","code":""},{"path":"https://sbfnk.github.io/rbi/reference/to_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert variables into inputs — to_input","title":"Convert variables into inputs — to_input","text":"Used predictions, one want re-simulate state/noise   trajectories","code":""},{"path":"https://sbfnk.github.io/rbi/reference/to_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert variables into inputs — to_input","text":"","code":"to_input(x, vars)"},{"path":"https://sbfnk.github.io/rbi/reference/to_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert variables into inputs — to_input","text":"x bi_model object vars vector variables convert inputs","code":""},{"path":"https://sbfnk.github.io/rbi/reference/to_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert variables into inputs — to_input","text":"updated bi_model object","code":""},{"path":[]},{"path":"https://sbfnk.github.io/rbi/reference/update.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a libbi object — update","title":"Update a libbi object — update","text":"updates time stamps libbi object; useful (input, output, etc.) files changed outside object .","code":""},{"path":"https://sbfnk.github.io/rbi/reference/update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a libbi object — update","text":"","code":"# S3 method for libbi update(x, ...)"},{"path":"https://sbfnk.github.io/rbi/reference/update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a libbi object — update","text":"x libbi object ... ignored","code":""},{"path":"https://sbfnk.github.io/rbi/reference/update.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a libbi object — update","text":"libbi object updated timestamps","code":""},{"path":"https://sbfnk.github.io/rbi/reference/var_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get variable names in a LibBi model — var_names","title":"Get variable names in a LibBi model — var_names","text":"Get variable names one type(s) returns variable names certain type (\"param\", \"state\", \"obs\",   \"noise\", \"const\") contained model libbi object","code":""},{"path":"https://sbfnk.github.io/rbi/reference/var_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get variable names in a LibBi model — var_names","text":"","code":"var_names(x, vars, type, dim = FALSE, opt = FALSE, aux = FALSE)"},{"path":"https://sbfnk.github.io/rbi/reference/var_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get variable names in a LibBi model — var_names","text":"x bi_model object vars character vector variable names; given, variables names considered type character vector one types dim logical; set TRUE, names contain dimensions brackets opt logical; set TRUE, names contain options (e.g., has_output) aux logical; set TRUE, auxiliary names returned","code":""},{"path":"https://sbfnk.github.io/rbi/reference/var_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get variable names in a LibBi model — var_names","text":"character vector ofvariable names","code":""},{"path":"https://sbfnk.github.io/rbi/reference/write_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes a bi model to a file. — write_model","title":"Writes a bi model to a file. — write_model","text":"Writes bi model file given filename. extension '.bi'   added necessary.","code":""},{"path":"https://sbfnk.github.io/rbi/reference/write_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes a bi model to a file. — write_model","text":"","code":"# S3 method for bi_model write_model(x, filename, update.name = TRUE, ...)  # S3 method for libbi write_model(x, filename, ...)"},{"path":"https://sbfnk.github.io/rbi/reference/write_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes a bi model to a file. — write_model","text":"x bi_model object, libbi object containing model filename name file written update.name whether update model name file name ... ignored","code":""},{"path":"https://sbfnk.github.io/rbi/reference/write_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Writes a bi model to a file. — write_model","text":"return value writeLines call.","code":""},{"path":[]},{"path":"https://sbfnk.github.io/rbi/reference/write_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Writes a bi model to a file. — write_model","text":"","code":"model_file_name <- system.file(package = \"rbi\", \"PZ.bi\") PZ <- bi_model(filename = model_file_name) new_file_name <- tempfile(\"PZ\", fileext = \".bi\") write_model(PZ, new_file_name)"},{"path":[]},{"path":"https://sbfnk.github.io/rbi/news/index.html","id":"rbi-100","dir":"Changelog","previous_headings":"","what":"rbi 1.0.0","title":"rbi 1.0.0","text":"CRAN release: 2023-08-15 add github actions package checking testing add vignette example implementations SIR epidemic model enable sparse input data hard deprecate functions arguments","code":""},{"path":"https://sbfnk.github.io/rbi/news/index.html","id":"rbi-0104","dir":"Changelog","previous_headings":"","what":"rbi 0.10.4","title":"rbi 0.10.4","text":"CRAN release: 2021-11-08 add markdown Suggests pass CRAN check","code":""},{"path":"https://sbfnk.github.io/rbi/news/index.html","id":"rbi-0103","dir":"Changelog","previous_headings":"","what":"rbi 0.10.3","title":"rbi 0.10.3","text":"CRAN release: 2020-04-17 updates work latest version LibBi errors fixed sample_obs chaining errors fixed reading saving libbi object","code":""},{"path":"https://sbfnk.github.io/rbi/news/index.html","id":"rbi-0102","dir":"Changelog","previous_headings":"","what":"rbi 0.10.2","title":"rbi 0.10.2","text":"CRAN release: 2019-07-10 better error handling expanded summary function fix dealing observation times sample_obs","code":""},{"path":"https://sbfnk.github.io/rbi/news/index.html","id":"rbi-0101","dir":"Changelog","previous_headings":"","what":"rbi 0.10.1","title":"rbi 0.10.1","text":"CRAN release: 2019-01-08 preserve_shell option remove_lines keep block options new simulate function","code":""},{"path":"https://sbfnk.github.io/rbi/news/index.html","id":"rbi-0100","dir":"Changelog","previous_headings":"","what":"rbi 0.10.0","title":"rbi 0.10.0","text":"CRAN release: 2018-12-11 Replaced sample_obs argument sample_obs function output_every argument outputs every n-th time step Better handling external libbi call via processx package Improved error/output handling print_log function inspect LibBi log Speed re-running libbi objects writing model file Big clean-code arguments, deprecating obsolete arguments get_traces now also reports initial states treated parameters read_libbi save_libbi now option split files improved summary function can now also print summaries time-varying variables new attach_data, replacing attach_file offering vastly improved functionality improved rewrite function provide correct output","code":""},{"path":"https://sbfnk.github.io/rbi/news/index.html","id":"rbi-091","dir":"Changelog","previous_headings":"","what":"rbi 0.9.1","title":"rbi 0.9.1","text":"CRAN release: 2018-05-14 Fixed bug bi_generate_dataset Fixed chaining variables chain","code":""},{"path":"https://sbfnk.github.io/rbi/news/index.html","id":"rbi-090","dir":"Changelog","previous_headings":"","what":"rbi 0.9.0","title":"rbi 0.9.0","text":"CRAN release: 2018-03-06 Fixed bugs working multiple dimensions New functions: join logLik Save supplement saving libbi option Fixed dry option Fixed handling without options Fixed handling predict function","code":""},{"path":"https://sbfnk.github.io/rbi/news/index.html","id":"rbi-080","dir":"Changelog","previous_headings":"","what":"rbi 0.8.0","title":"rbi 0.8.0","text":"CRAN release: 2017-08-14 supplement option save_libbi store supplementary information Temporary directories now removed quitting R collecting garbage Improved chaining libbi calls New attach_file function, general version former add_output New file option bi_read Fixed problems predict Fixed add_output passed list Fixed bug writing observation files; extra dimensions now written correct order Improved writing observation files ns dimensions Improved error handling: libbi calls now finish yield warning call libbi executable fails; makes possible inspect object diagnose problem","code":""},{"path":"https://sbfnk.github.io/rbi/news/index.html","id":"rbi-070","dir":"Changelog","previous_headings":"","what":"rbi 0.7.0","title":"rbi 0.7.0","text":"CRAN release: 2017-02-06 class now based S3 classes. , plays much nicer magrittr related packages. now str summary methods defined libbi objects, sample, filter optimise commands running LibBi Caching now supported: multiple calls bi_read much faster added testing suite Fixed bug bi_read reading variables one dimension bi_generate_dataset now seed option extract_sample function extracting single sample NetCDF file new add_output option reconstructing libbi objects cleaned code removed obsolete functions Many smaller bug fixes","code":""},{"path":"https://sbfnk.github.io/rbi/news/index.html","id":"rbi-060","dir":"Changelog","previous_headings":"","what":"rbi 0.6.0","title":"rbi 0.6.0","text":"CRAN release: 2016-12-23 bi_contents quickly get variables NetCDF file generate_seed generate seed libbi run new sample_obs option libbi$run, sample posterior observations improved option handling; now one ‘options’ option overloaded subset operators bi_model result field libbi object new vignette: Introduction rbi Fixed bug bi_model$get_vars didn’t remove spaces Fixed bug reading coord dimension(s) bi_read Fixed bug bi_model$fix ignored input variables","code":""},{"path":"https://sbfnk.github.io/rbi/news/index.html","id":"rbi-050","dir":"Changelog","previous_headings":"","what":"rbi 0.5.0","title":"rbi 0.5.0","text":"CRAN release: 2016-11-18 client now option libbi$run Fix bug parsing options libbi$initialize Fix bug get_traces one sample bi_model$insert_lines can now work blocks Improve cloning, initialising parameters can now passed","code":""},{"path":"https://sbfnk.github.io/rbi/news/index.html","id":"rbi-041","dir":"Changelog","previous_headings":"","what":"rbi 0.4.1","title":"rbi 0.4.1","text":"CRAN release: 2016-10-18 Change package name lower case Tidy CRAN submission Fix finding libbi path Fix handling config options (#2, @tyler-abbot) Fix options bi_generate_dataset (#3, #5, @tyler-abbot) Fix demos (#1, #6, @tyler-abbot) Remove stringr dependency","code":""},{"path":"https://sbfnk.github.io/rbi/news/index.html","id":"rbi-04","dir":"Changelog","previous_headings":"","what":"rbi 0.4","title":"rbi 0.4","text":"Guess time dimension netCDF files Bug fixes better deal multiple coordinate variables burnin option get_traces Reduce memory use thinning","code":""},{"path":"https://sbfnk.github.io/rbi/news/index.html","id":"rbi-03","dir":"Changelog","previous_headings":"","what":"rbi 0.3","title":"rbi 0.3","text":"Bug fixes bi_write Improve dealing different types dimensions, including introduction coord_dim option bi_write bi_generate_dataset now returns observations Remove Rcpp dependency","code":""},{"path":"https://sbfnk.github.io/rbi/news/index.html","id":"rbi-02","dir":"Changelog","previous_headings":"","what":"rbi 0.2","title":"rbi 0.2","text":"Remove C code use ncdf4 package interaction netCDF files Introduce bi_model class manipulate models Allow giving init, obs input R objects Rename bi_wrapper libbi Improved bi_read function directly read libbi objects","code":""},{"path":"https://sbfnk.github.io/rbi/news/index.html","id":"rbi-01","dir":"Changelog","previous_headings":"","what":"rbi 0.1","title":"rbi 0.1","text":"initial version","code":""}]
